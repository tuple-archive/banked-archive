{"pageProps":{"search":{"page":2,"results_per_page":12,"results_size":2,"total_results_size":14,"total_pages":2,"next_page":null,"prev_page":"https://banked.cdn.prismic.io/api/v2/documents/search?ref=ZytR0hYAADAAMUe6&q=%5B%5Bat%28document.type%2C+%22article%22%29%5D%5Bat%28document.tags%2C+%5B%22technology%22%5D%29%5D%5D&orderings=%5Bmy.article.post_date+desc%2C+document.first_publication_date+desc%5D&page=1&pageSize=12&fetchLinks=person.full_name%2Cperson.role%2Cperson.image","results":[{"id":"YVMy2xAAACEA7BAF","uid":"shipping-web-components-in-2020","url":null,"type":"article","href":"https://banked.cdn.prismic.io/api/v2/documents/search?ref=ZytR0hYAADAAMUe6&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YVMy2xAAACEA7BAF%22%29+%5D%5D","tags":["technology","developers","banked js","insight","education"],"first_publication_date":"2021-09-28T15:21:04+0000","last_publication_date":"2021-09-29T15:43:25+0000","slugs":["shipping-web-components-in-2020."],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"title":"Shipping web components in 2020.","description":"Recently, we shipped Banked.js, a component library for integrating account-to-account payments into any web application. We’d love to share what that process looked like.","image":{"dimensions":{"width":2432,"height":1648},"alt":"shipping web components","copyright":null,"url":"https://images.prismic.io/banked/1e574cfd-79bc-478c-ab7a-f034494d142d_shipping.png?auto=compress,format","id":"YVNh2xAAACEA7Oaa","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}},"author":{"id":"YUuR0BEAACMAuH1e","type":"person","tags":[],"lang":"en-gb","slug":"joe-pettersson","first_publication_date":"2021-09-22T20:28:06+0000","last_publication_date":"2021-09-29T16:47:53+0000","uid":"joe-pettersson","data":{"full_name":"Joe Pettersson","role":"Chief Technology Officer","image":{"dimensions":{"width":160,"height":160},"alt":"Joe Pettersson","copyright":null,"url":"https://images.prismic.io/banked/9a5546bb-dc84-403f-b062-1ed795cbb746_author-joe.png?auto=compress,format","id":"YUtfaBEAACEAt5xx","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}}},"link_type":"Document","isBroken":false},"post_date":"2020-04-21","header":[{"primary":{"image":{"dimensions":{"width":2432,"height":1648},"alt":"shipping web components","copyright":null,"url":"https://images.prismic.io/banked/1e574cfd-79bc-478c-ab7a-f034494d142d_shipping.png?auto=compress,format","id":"YVNh2xAAACEA7Oaa","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}},"caption":[]},"items":[{}],"id":"image$a47d9b4d-6e88-4bce-8989-d918b503a24d","slice_type":"image","slice_label":null}],"body":[{"primary":{"text":[{"type":"heading3","text":"Recently, we shipped Banked.js, a component library for integrating account-to-account payments into any web application. We’d love to share what that process looked like, from vanilla JavaScript to shipping a web-component: what we thought about, what we tried, and why. We also wanted to talk about what it’s like to build and ship a web component in 2020.","spans":[{"start":0,"end":358,"type":"strong"},{"start":21,"end":30,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.banked.com/docs/bankedjs","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"What is Banked.js and why did you create it?","spans":[{"start":0,"end":44,"type":"strong"}]},{"type":"paragraph","text":"The Banked platform enables anyone to take direct account-to-account payments. We provide several ways of doing this, ranging from the very easy to implement (using our hosted checkout) to the more involved (building your own custom checkout experience using our Checkout API).","spans":[{"start":0,"end":277,"type":"strong"},{"start":263,"end":275,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.banked.com/reference#the-checkout-api","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"When we spoke to our customers, we often heard the feedback that they wanted a middle ground. Specifically, they wanted a way of embedding our checkout inside their user experience (and therefore controlling it) but with no need to build it entirely themselves.","spans":[{"start":0,"end":261,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"The core of Banked’s checkout is a screen where users select which bank they’d like to pay with. From here, they are redirected to their chosen bank’s authorisation flow and back to a callback URL provided by the merchant.","spans":[{"start":0,"end":222,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"We wanted to provide a way of our customers easily integrating this UI and behaviour into their web applications. Embedding the UI widget with JavaScript was the obvious answer as many of our customers have experience with embedding payment widgets, but that comes with concerns for everybody.","spans":[{"start":0,"end":293,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"The blessing and curse of being on other people’s pages.","spans":[{"start":0,"end":56,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"EMBEDDED USER EXPERIENCE.","spans":[{"start":0,"end":25,"type":"label","data":{"label":"p3"}},{"start":0,"end":25,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Embedding a UI into one you don’t control forces you to answer a few of questions:","spans":[{"start":0,"end":82,"type":"strong"}]},{"type":"list-item","text":"What’s the minimum UX/UI you can provide to deliver value?","spans":[{"start":0,"end":58,"type":"strong"}]},{"type":"list-item","text":"How (or should) our embed react to the UX and layout around it?","spans":[{"start":0,"end":63,"type":"strong"}]},{"type":"list-item","text":"Should implementors be able to customise our embed? If so, how much? Would allowing them to customise it affect the ability to provide a service? Or lead to ‘worse’ outcomes for their users?","spans":[{"start":0,"end":190,"type":"strong"}]},{"type":"paragraph","text":"After some deliberation, this is how we answered:","spans":[{"start":0,"end":49,"type":"strong"}]},{"type":"list-item","text":"We’re just going to be embed the bank selection UI","spans":[{"start":0,"end":50,"type":"strong"}]},{"type":"list-item","text":"Yes, it should react (in a limited way) to the surrounding UI (being responsive to screen size/orientation), expanding to fill its parent container","spans":[{"start":0,"end":147,"type":"strong"}]},{"type":"list-item","text":"It should only allow customisation in a very controlled way","spans":[{"start":0,"end":59,"type":"strong"},{"start":40,"end":44,"type":"em"}]},{"type":"paragraph","text":"The customisation we offered was simple: you can use our reactive button or not. There’s a lot of hard learned lessons and optimisations we’ve made to this screen from our own hosted checkout (e.g. how does it react to a bank not being available?) and customisation might mean a bad experience for end-users and a poor conversion experience for merchants; if they really want that level of control they can always implement our Checkout API.","spans":[{"start":0,"end":441,"type":"strong"},{"start":428,"end":440,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.banked.com/reference#the-checkout-api","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"So, why did we ship a button at all? And why do we recommend our customers use it by default?","spans":[{"start":0,"end":93,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Two reasons:","spans":[{"start":0,"end":12,"type":"strong"}]},{"type":"list-item","text":"We’ve learned that giving users more context for what will happen next (e.g. going to their mobile banking app) helps conversion, branding the button after you select your bank helps too","spans":[{"start":0,"end":186,"type":"strong"}]},{"type":"list-item","text":"The next step is redirecting users to their selected bank’s authorisation URL. Unless this happens after a ‘user sourced event’, like a button click, many browsers will prevent the bank’s app deep-link from opening. We learned this lesson the hard way and we want to avoid our customers needing to learn it too!","spans":[{"start":0,"end":311,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Being good citizens on our customers’ pages.","spans":[{"start":0,"end":44,"type":"strong"}]},{"type":"paragraph","text":"Page weight and performance is increasingly important for our merchant customers, not least because of the impact it has on conversion rates; we need to vociferously defend every byte we ship to them and every tick of the browser’s rendering we use.","spans":[{"start":0,"end":249,"type":"strong"},{"start":103,"end":140,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.hubspot.com/marketing/page-load-time-conversion-rates","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"This led us to our Rules of the Game:","spans":[{"start":0,"end":37,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"o-list-item","text":"Bundle size should be as small as humanly possible.","spans":[{"start":0,"end":51,"type":"strong"}]},{"type":"o-list-item","text":"We should constantly track, measure, and optimise on-page performance.","spans":[{"start":0,"end":70,"type":"strong"}]},{"type":"o-list-item","text":"If we break, we break gracefully and have as few side effects on the page as possible.","spans":[{"start":0,"end":86,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"We measure bundle size (1) through WebPack’s performance API, erroring our build if we go over our pre-defined size limits, we also have bundle size optimisation as part of the ‘definition of done’ for tasks we work on with Banked.js. Measuring and optimisation (2) is achieved through vigorous testing and usage of the window.performance browser API.","spans":[{"start":0,"end":351,"type":"strong"},{"start":35,"end":60,"type":"hyperlink","data":{"link_type":"Web","url":"https://webpack.js.org/configuration/performance/","target":"_blank"}},{"start":320,"end":351,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.mozilla.org/en-US/docs/Web/API/Window/performance","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"However, anyone who has built an embeddable UI knows breaking gracefully (3) is hard. Only recently has the CSS community started embracing scoping, without which styling clashes and side-effects from the parent page, and the embed itself, can have serious consequences. Beyond CSS, JavaScript’s global mutable state and single threaded event loop can make small changes have unintended functional or performance implications.","spans":[{"start":0,"end":426,"type":"strong"},{"start":91,"end":147,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.mozilla.org/en-US/docs/Web/CSS/:scope","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"How could we solve these issues? Use tooling to automatically scope our CSS declarations? Use WebWorkers to avoid on page performance impacts? Lint and statically analyse our code as much as possible to avoid common foot-guns? These are all encapsulation problems, and we eventually realised web components and their associated web APIs mitigate many of these issues.","spans":[{"start":0,"end":367,"type":"strong"},{"start":37,"end":88,"type":"hyperlink","data":{"link_type":"Web","url":"https://medium.com/seek-blog/the-end-of-global-css-90d2a4a06284","target":"_blank"}},{"start":90,"end":104,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Embedding an iframe could have helped us solve these issues but it would have also introduced a lot of others: working around CSP and frame busting protections on our customers’ sites; ad and script blockers being increasingly aggressive with blocking iframes; and browser security protections limiting access to the top object from within the frame, preventing easy two-way integration with the embedding page.","spans":[{"start":0,"end":411,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Making implementors lives as easy as possible.","spans":[{"start":0,"end":46,"type":"strong"}]},{"type":"paragraph","text":"An explicit goal for Banked.js was making it as easy to integrate and use as possible. When we first started thinking about this project, we considered directly building components for JavaScript frameworks (like React or Vue) but when we investigated we realised, A) adoption of these frameworks wasn’t high enough amongst our customer base to justify it, and B) the cardinality of framework, versions, and tooling amongst those that had adopted it was high enough that it would take forever to get to significant coverage.","spans":[{"start":0,"end":524,"type":"strong"},{"start":435,"end":438,"type":"em"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"So we went down the path of being framework agnostic, exposing a simple enough API to integrate with any framework and version easily, ensuring a consistently straightforward implementation for our users.","spans":[{"start":0,"end":204,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Our design goal was for the API to be DOM based: you give us a tag on the page and a payment ID and we’ll take care of everything else. Our implementors shouldn’t have to care about order of precedence, loading, or asynchronicity unless they choose to. Web Components ended up adding huge value here, saving us a considerable amount of work building on page APIs (which we built ourselves in our first non Web Component version).","spans":[{"start":0,"end":429,"type":"strong"},{"start":284,"end":288,"type":"em"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Web Components also gave us a lot of ‘defensiveness’ for free. We want to provide a reliable service to our customers, and sometimes that involves us protecting them from themselves; Web Component’s encapsulation gives us a lot of that protection out of the box.","spans":[{"start":0,"end":262,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Version 1: Vanilla JavaScript and fighting the battle for encapsulation.","spans":[{"start":0,"end":72,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"The vision was simple: include a JavaScript snippet and give a DOM node a magic ID. Voila, you have your bank selection screen.","spans":[{"start":0,"end":127,"type":"strong"}]}]},"items":[{}],"id":"text$402ab86d-14b1-43b5-9700-2cf0ccdecd7b","slice_type":"text","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"Our initial API design for Banked.js","spans":[{"start":0,"end":36,"type":"em"}]}],"embed_url":{"gist":"Joe8Bit/312bd33d1db7cf484c69652b4e6e903f","embed_url":"https://gist.github.com/Joe8Bit/312bd33d1db7cf484c69652b4e6e903f","type":"rich","version":"1.0","title":"Initial banked.js version","author_name":null,"author_url":null,"provider_name":"GitHub","provider_url":"https://gist.github.com","cache_age":null,"thumbnail_url":"https://gist.github.com/fluidicon.png","thumbnail_width":null,"thumbnail_height":null,"html":"<script src=\"https://gist.github.com/Joe8Bit/312bd33d1db7cf484c69652b4e6e903f.js\"></script>"}},"items":[{}],"id":"embed$52ace15f-9ddc-490b-934b-93f62de344ce","slice_type":"embed","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"We thought this was simple, clean, easy to understand, and could be integrated easily into most tools and frameworks. You could then attach a DOM event listener to capture the custom event emitted by the component:","spans":[{"start":0,"end":214,"type":"strong"}]}]},"items":[{}],"id":"text$effb06a4-d135-44d0-aee2-8f99772c05d9","slice_type":"text","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"Getting the authorisation URL with JavaScript from out initial design","spans":[{"start":0,"end":69,"type":"em"}]}],"embed_url":{"gist":"Joe8Bit/bd73ae6e08cd4dd3a2dba5e8903bc62d","embed_url":"https://gist.github.com/Joe8Bit/bd73ae6e08cd4dd3a2dba5e8903bc62d","type":"rich","version":"1.0","title":"Source auth URL","author_name":null,"author_url":null,"provider_name":"GitHub","provider_url":"https://gist.github.com","cache_age":null,"thumbnail_url":"https://gist.github.com/fluidicon.png","thumbnail_width":null,"thumbnail_height":null,"html":"<script src=\"https://gist.github.com/Joe8Bit/bd73ae6e08cd4dd3a2dba5e8903bc62d.js\"></script>"}},"items":[{}],"id":"embed$55542f3b-5bbc-43ff-9552-ba0453822e4e","slice_type":"embed","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"We would handle all the mounting, API requests, and asynchronicity internally. Leaving very little work for the implementor.","spans":[{"start":0,"end":124,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"It worked, but it felt brittle.","spans":[{"start":0,"end":31,"type":"strong"},{"start":23,"end":30,"type":"em"}]},{"type":"paragraph","text":"","spans":[]},{"type":"list-item","text":"Magic ID’s felt easily broken (named access on the window object could have some unintended side effects, for example) and could be confusing to implement (did it have to be on a div element? Why not an article?)","spans":[{"start":0,"end":212,"type":"strong"},{"start":31,"end":64,"type":"hyperlink","data":{"link_type":"Web","url":"https://html.spec.whatwg.org/multipage/window-object.html#named-access-on-the-window-object","target":"_blank"}}]},{"type":"list-item","text":"We had to write a lot of code to handle the order of precedence and rendering (e.g. what happens if the data-payment-id isn’t set until after the page has rendered?)","spans":[{"start":0,"end":165,"type":"strong"},{"start":18,"end":21,"type":"em"},{"start":136,"end":141,"type":"em"}]},{"type":"list-item","text":"Even if we namespaced all our CSS, any change to global elements (like form fields, links, buttons) would have serious consequences for our layout. Writing overly specific CSS targeting, littering our code with !importantor inlining our CSS was hard to maintain and would lead to weird edge case performance and rendering issues.","spans":[{"start":0,"end":329,"type":"strong"}]},{"type":"list-item","text":"We had to write a disconcerting amount of JavaScript, and it all needed to run in the same event loop as the encapsulating page. It proved hard to do this defensively and in a way that we were confident wouldn’t impact page performance.\n","spans":[{"start":0,"end":236,"type":"strong"}]},{"type":"paragraph","text":"We also hadn’t planned to deal with user sourced events being needed to not break the bank’s redirect, but when we gave this version to the rest of the engineering team to play with, they quickly implemented this:","spans":[{"start":0,"end":213,"type":"strong"}]}]},"items":[{}],"id":"text$23ca79aa-423f-4421-8da0-11b2fbc0a360","slice_type":"text","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"Pure JavaScript redirects break in mobile safari, you need a user sourced event!","spans":[{"start":0,"end":80,"type":"em"}]}],"embed_url":{"gist":"Joe8Bit/f73de03535739dc7356fee307d521e5c","embed_url":"https://gist.github.com/Joe8Bit/f73de03535739dc7356fee307d521e5c","type":"rich","version":"1.0","title":"Bad implementation","author_name":null,"author_url":null,"provider_name":"GitHub","provider_url":"https://gist.github.com","cache_age":null,"thumbnail_url":"https://gist.github.com/fluidicon.png","thumbnail_width":null,"thumbnail_height":null,"html":"<script src=\"https://gist.github.com/Joe8Bit/f73de03535739dc7356fee307d521e5c.js\"></script>"}},"items":[{}],"id":"embed$5b6e49d1-0ca1-4026-9a81-3ca22eeaa6cf","slice_type":"embed","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"Which didn’t work in the hard to diagnose and understand way described above. We realised this would be common for our external implementors too.","spans":[{"start":0,"end":145,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Version 2: Web Components and, “Pfft, we don’t need none of that tooling”.","spans":[{"start":0,"end":74,"type":"strong"}]},{"type":"paragraph","text":"One of our engineers had a brainwave when thinking about the issues we’d run into, ‘Web Components!’.","spans":[{"start":0,"end":101,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Web Components are now a mature and well supported set of web APIs. They seemed to be perfectly designed for our use case and the challenges we were running into (particularly the Shadow DOM). We quickly built a new version, using the raw APIs, and it looked great:","spans":[{"start":0,"end":265,"type":"strong"},{"start":36,"end":50,"type":"hyperlink","data":{"link_type":"Web","url":"https://caniuse.com/#search=components","target":"_blank"}},{"start":176,"end":190,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM","target":"_blank"}}]}]},"items":[{}],"id":"text$034883d3-e4d7-4b65-8ee4-9cc497b3b4d1","slice_type":"text","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"The new Web Components based API for Banked.js","spans":[{"start":0,"end":46,"type":"em"}]}],"embed_url":{"gist":"Joe8Bit/f2f6c4e9c855e69db7001851bc439feb","embed_url":"https://gist.github.com/Joe8Bit/f2f6c4e9c855e69db7001851bc439feb","type":"rich","version":"1.0","title":"Web components!","author_name":null,"author_url":null,"provider_name":"GitHub","provider_url":"https://gist.github.com","cache_age":null,"thumbnail_url":"https://gist.github.com/fluidicon.png","thumbnail_width":null,"thumbnail_height":null,"html":"<script src=\"https://gist.github.com/Joe8Bit/f2f6c4e9c855e69db7001851bc439feb.js\"></script>"}},"items":[{}],"id":"embed$5b64f533-4307-41e2-a88c-104d63f7008f","slice_type":"embed","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"(Notice we also added a second component, the button).","spans":[{"start":0,"end":54,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"It provided most of the encapsulation we were after, handled the mounting and initialising of our component, and we had to write zero lines of code to do it. It also provided a much clearer, more semantic API for implementors to understand: no more magic strings and ambiguous DOM nodes. It even provided nice ways of handling event emission and nicely integrated as a part of a form element out of the box.","spans":[{"start":0,"end":407,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Results from our engineering team were positive, there were far fewer gotchas and heffalump traps when they created toy implementations. Most of them got it working in minutes!","spans":[{"start":0,"end":176,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"A new challenge emerged. We’d built a successful thing, but the tooling necessary to make us happy with its integrity, quality, and safety eluded us. Tooling for JavaScript projects is not something you usually lack, so we were interested to find so few options for testing, linting, and building Web Components.","spans":[{"start":0,"end":312,"type":"strong"},{"start":49,"end":55,"type":"em"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Before we had started on V2, we looked at Polymer and were pretty confused about its current status (parts of it are deprecated but are still used? Other projects under its banner appear to do similar things to the original Polymer library but not all of them?). It didn’t inspire confidence, and we discarded it in favour of quickly getting something up and running.","spans":[{"start":0,"end":367,"type":"strong"},{"start":42,"end":49,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.polymer-project.org/","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"This bears true for most of the Web Components ecosystem: it’s confusing, buggy, and riddled with out-of-date docs and confusingly deprecated tools.","spans":[{"start":0,"end":148,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"A particularly annoying issue was the lack of support (or bugginess) of Web Components implementations in popular testing tools; the web component community's default fall back is saying, ‘You need to use a full browser run-time,’ (like Karma). Full support for non-browser headless/JS runtimes would have made this process, and our CI infrastructure, much simpler.","spans":[{"start":0,"end":365,"type":"strong"},{"start":237,"end":242,"type":"hyperlink","data":{"link_type":"Web","url":"https://karma-runner.github.io/latest/index.html","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Version 3: Web Components and, “Turns out we do need that tooling”.","spans":[{"start":0,"end":67,"type":"strong"}]},{"type":"paragraph","text":"During our search through the dark and murky corners of the Web Components community we came across Open-WC: a laudable and successful effort to combine various tools and frameworks into a usable, opinionated, and reliable toolchain for building web components.","spans":[{"start":0,"end":261,"type":"strong"},{"start":100,"end":107,"type":"hyperlink","data":{"link_type":"Web","url":"https://open-wc.org/","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"It provides:","spans":[{"start":0,"end":12,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"list-item","text":"Working (and sensible) linters (ESLint and Stylist) configured for working with Web Components","spans":[{"start":0,"end":94,"type":"strong"}]},{"type":"list-item","text":"A framework and tooling for development, which was otherwise difficult and fragile to maintain","spans":[{"start":0,"end":94,"type":"strong"}]},{"type":"list-item","text":"A suite of tools for testing (unit, integration and accessibility)","spans":[{"start":0,"end":66,"type":"strong"}]},{"type":"list-item","text":"Build tooling (for our choice of tool WebPack, but also Rollup)","spans":[{"start":0,"end":63,"type":"strong"}]},{"type":"list-item","text":"Deployment and demo tooling (through a pretty sweet Storybook integration)\n","spans":[{"start":0,"end":74,"type":"strong"},{"start":52,"end":61,"type":"hyperlink","data":{"link_type":"Web","url":"https://storybook.js.org/","target":"_blank"}}]},{"type":"paragraph","text":"We quickly moved Banked.js to use Open WC and haven’t looked back. It’s meant we could delete a huge amount of home-brewed tooling and the tradeoffs have been worth it.","spans":[{"start":0,"end":168,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"It imposes a small bundle size penalty (mainly through its use of LitElement) but it was a small price worth paying for the development ergonomics and maintenance benefits. We’ve also changed its default build, and don’t use the <script> based ES modules it comes configured with.","spans":[{"start":0,"end":280,"type":"strong"},{"start":13,"end":18,"type":"em"},{"start":66,"end":76,"type":"hyperlink","data":{"link_type":"Web","url":"https://lit-element.polymer-project.org/","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"So now we’re left with a useful, safe, and reliable component any of our customers can use to embed account-to-account payments into their web app:","spans":[{"start":0,"end":147,"type":"strong"}]}]},"items":[{}],"id":"text$1499bca4-581d-4ff3-a50f-c3f274794c69","slice_type":"text","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"Our final API for Banked.js","spans":[{"start":0,"end":27,"type":"em"}]}],"embed_url":{"gist":"Joe8Bit/f2f6c4e9c855e69db7001851bc439feb","embed_url":"https://gist.github.com/Joe8Bit/f2f6c4e9c855e69db7001851bc439feb","type":"rich","version":"1.0","title":"Web components!","author_name":null,"author_url":null,"provider_name":"GitHub","provider_url":"https://gist.github.com","cache_age":null,"thumbnail_url":"https://gist.github.com/fluidicon.png","thumbnail_width":null,"thumbnail_height":null,"html":"<script src=\"https://gist.github.com/Joe8Bit/f2f6c4e9c855e69db7001851bc439feb.js\"></script>"}},"items":[{}],"id":"embed$0b793090-5aa1-4ae9-aa63-2e59452d89f9","slice_type":"embed","slice_label":null},{"primary":{"text":[{"type":"heading3","text":"Serving Banked.js","spans":[{"start":0,"end":17,"type":"strong"}]},{"type":"paragraph","text":"After we build Banked.js via Github Actions, we deploy it to Cloudflare’s KV Store and serve it to end users via a Worker. CloudFlare workers are serverless functions that are distributed and run in Cloudflare’s 200+ POPs.","spans":[{"start":0,"end":222,"type":"strong"},{"start":74,"end":82,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.cloudflare.com/products/workers-kv/","target":"_blank"}},{"start":113,"end":121,"type":"hyperlink","data":{"link_type":"Web","url":"https://workers.cloudflare.com/","target":"_blank"}},{"start":212,"end":221,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.cloudflare.com/network/","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"We use workers (rather than Cloudflare’s pull based CDN) because it enables us to do a few different things that just aren’t possible (or if possible, not easy) with traditional CDNs, namely:","spans":[{"start":0,"end":191,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"list-item","text":"We can serve a debug build if the request comes from a specified domain or with a certain cookie set.","spans":[{"start":0,"end":101,"type":"strong"}]},{"type":"list-item","text":"We can serve different versions to different user agents if we want to dynamically include polyfills.","spans":[{"start":0,"end":101,"type":"strong"}]},{"type":"list-item","text":"We can multivariate test new versions of the script without implementors needing to update their config.\n","spans":[{"start":0,"end":104,"type":"strong"}]},{"type":"paragraph","text":"The example below is a worker function that serves a debug build if a cookie is present on the request (getting the JS from the KV store is omitted for brevity):","spans":[{"start":0,"end":161,"type":"strong"}]}]},"items":[{}],"id":"text$91438e50-b7b1-4c90-8641-a0f2eaf5468a","slice_type":"text","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"Cloudflare worker to serve a debug build of Banked.js","spans":[{"start":0,"end":53,"type":"em"}]}],"embed_url":{"gist":"Joe8Bit/4bc1c66a07b0c44f1cca24bbabcf8ad7","embed_url":"https://gist.github.com/Joe8Bit/4bc1c66a07b0c44f1cca24bbabcf8ad7","type":"rich","version":"1.0","title":"Cloudflare worker","author_name":null,"author_url":null,"provider_name":"GitHub","provider_url":"https://gist.github.com","cache_age":null,"thumbnail_url":"https://gist.github.com/fluidicon.png","thumbnail_width":null,"thumbnail_height":null,"html":"<script src=\"https://gist.github.com/Joe8Bit/4bc1c66a07b0c44f1cca24bbabcf8ad7.js\"></script>"}},"items":[{}],"id":"embed$73a8e4ea-738a-4666-bbfd-da7aa5fca88d","slice_type":"embed","slice_label":null},{"primary":{"text":[{"type":"heading3","text":"The future of embedded checkout at Banked.","spans":[{"start":0,"end":42,"type":"strong"}]},{"type":"paragraph","text":"We’ve ended up very happy with Banked.js: it provides our customers with a valuable, lightweight way of taking account-to-account payments and is easy and safe for us to iterate on and improve. Our aim is to open source Banked.js in the next few weeks.","spans":[{"start":0,"end":252,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"We’re also looking at how we can bring the same easy, safe integration experience to our customers’ native applications. Watch this space!","spans":[{"start":0,"end":138,"type":"strong"}]}]},"items":[{}],"id":"text$b1c425da-36ce-4c7a-9b6a-c1e4f8374fc2","slice_type":"text","slice_label":null}]}},{"id":"YUuQbREAACEAuHcu","uid":"transaction-data-will-unlock-the-future-of-banks","url":null,"type":"article","href":"https://banked.cdn.prismic.io/api/v2/documents/search?ref=ZytR0hYAADAAMUe6&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YUuQbREAACEAuHcu%22%29+%5D%5D","tags":["technology","ideas","insight","mission","vision"],"first_publication_date":"2021-09-22T20:38:51+0000","last_publication_date":"2021-09-29T16:59:35+0000","slugs":["transaction-data-will-unlock-the-future-of-banks."],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"title":"Transaction data will unlock the future of banks.","description":"There’s a seismic shift happening in the way banks make money that could have significant privacy implications for their customers.","image":{"dimensions":{"width":2432,"height":1312},"alt":"binary data","copyright":null,"url":"https://images.prismic.io/banked/9c6edd10-e4f4-42d9-9a5c-3f3cb4f78aa2_binary.png?auto=compress,format","id":"YUuTqxEAACEAuIWk","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}},"author":{"id":"YUuR0BEAACMAuH1e","type":"person","tags":[],"lang":"en-gb","slug":"joe-pettersson","first_publication_date":"2021-09-22T20:28:06+0000","last_publication_date":"2021-09-29T16:47:53+0000","uid":"joe-pettersson","data":{"full_name":"Joe Pettersson","role":"Chief Technology Officer","image":{"dimensions":{"width":160,"height":160},"alt":"Joe Pettersson","copyright":null,"url":"https://images.prismic.io/banked/9a5546bb-dc84-403f-b062-1ed795cbb746_author-joe.png?auto=compress,format","id":"YUtfaBEAACEAt5xx","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}}},"link_type":"Document","isBroken":false},"post_date":"2020-04-09","header":[{"primary":{"image":{"dimensions":{"width":2432,"height":1312},"alt":"binary data","copyright":null,"url":"https://images.prismic.io/banked/9c6edd10-e4f4-42d9-9a5c-3f3cb4f78aa2_binary.png?auto=compress,format","id":"YUuTqxEAACEAuIWk","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}},"caption":[]},"items":[{}],"id":"image$c8c63416-ae33-48b7-bb7c-fba0fcdda61e","slice_type":"image","slice_label":null}],"body":[{"primary":{"text":[{"type":"heading3","text":"This change was summed up in a TechCrunch article about the challenger bank Monzo partnering with another UK fintech startup, Flux (Starling have since made a similar announcement). The news was simple: if Monzo customers used their Monzo card at a small number of retailers partnered with Flux, they’d be able to see individual items on a receipt.","spans":[{"start":0,"end":348,"type":"strong"},{"start":29,"end":49,"type":"hyperlink","data":{"link_type":"Web","url":"https://techcrunch.com/2019/01/28/monzo-teams-up-with-flux-to-add-itemised-receipts-and-loyalty-points/","target":"_blank"}},{"start":126,"end":130,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.tryflux.com/","target":"_blank"}},{"start":152,"end":179,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.starlingbank.com/blog/reducing-environmental-impact-paper-receipts/","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"The article went on to talk about some of the user experience implications this might have:","spans":[{"start":0,"end":91,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"In the future, this could include letting you easily track your eating out habits, right down to item-level rather than just merchant category, as part of your general health goals.","spans":[{"start":0,"end":181,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"While the UX is interesting, the revelatory implication is what impact this data can have on a bank’s business model.","spans":[{"start":0,"end":117,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"This item-level transaction data is one of bankings holy grails, with the potential to let them step outside the ‘classic banking business model’ for the first time.","spans":[{"start":0,"end":165,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Not your parents bank, anymore.","spans":[{"start":0,"end":31,"type":"strong"}]},{"type":"paragraph","text":"If we focus just on challenger banks, there are three ways they currently make money (or plan to make money):","spans":[{"start":0,"end":109,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"“We can do it cheaper”","spans":[{"start":0,"end":22,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Banks like Monzo and Starling don’t have huge costly branch networks or creaking IT systems that need £100 million service and support contracts; they can offer Classic Banking Services™️ at much lower costs.","spans":[{"start":0,"end":208,"type":"strong"},{"start":46,"end":68,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.ft.com/content/e1099b26-12c6-11e7-b0c1-37e417ee6c76","target":"_blank"}},{"start":72,"end":91,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.theregister.co.uk/2018/02/22/lloyds_to_splash_3bn_on_tech/","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"This is the ‘nickel and dime’ challenger bank business model and forms a core part of their funding and growth models. For example, Starling and Monzo have started offering the same (from a user experience point of view) unsecured lending products as their legacy competitors, but they’re doing it with larger margins than their older, more cost dependent rivals.","spans":[{"start":0,"end":363,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"“We can make money from an ‘open’ ecosystem”","spans":[{"start":0,"end":44,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"The second model is where challenger banks provide ‘marketplaces’ to their customers. In effect, these are tight (API based) integrations with other companies offering complimentary services. It enables banks like Starling to offer a wide range of products for a very low (or zero) marginal cost.","spans":[{"start":0,"end":296,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Beyond the fact they can offer more products and a better experience to their customers (and thus reduce churn, among other things), these ‘ecosystem plays’ enable the banks to make money when a third-party product is sold to one of their customers. If effect, an affiliate scheme writ large. For example, if I’m a Starling customer and I get a mortgage with Habito via their integration, Starling makes money.","spans":[{"start":0,"end":410,"type":"strong"},{"start":359,"end":365,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.habito.com/","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"This is the model a lot of challenger banks are focusing on scaling at the moment. They see it as enabling huge leverage from their existing (and quickly growing) customer bases.","spans":[{"start":0,"end":178,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"“We can make money from data”","spans":[{"start":0,"end":29,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Finally, monetising people’s transaction data. What if Monzo could understand the details of your regular food shop at Sainsbury’s and recommend (for a fee) that you switch to Tesco and save £23 a week? What if Starling could offer Google or Facebook data on your spending and they could (for the first time ever) ‘close the loop’ on online advertising?","spans":[{"start":0,"end":353,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"This isn’t a new idea. In fact, big legacy banks have seen this opportunity for a long time, but there’s always been things standing in their way:","spans":[{"start":0,"end":146,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Their core technology is terrible. Everything takes 10x longer and costs 100x more than it should. They have a hard enough time keeping internet banking working, let alone investing in complex, unproven technology.","spans":[{"start":0,"end":214,"type":"strong"},{"start":128,"end":160,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.bbc.co.uk/news/business-44978503","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Large banks are inherently conservative. How would their customers respond to them mining this data? How would this new revenue model affect their core business models? How would the regulator react? GDPR? In a world of 5 year CEO tenures, there’s a huge disincentive to long-term business model transition.","spans":[{"start":0,"end":307,"type":"strong"},{"start":220,"end":238,"type":"hyperlink","data":{"link_type":"Web","url":"https://corpgov.law.harvard.edu/2018/02/12/ceo-tenure-rates/","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"You can’t really do it without unpacking transactions. If a bank only knows you’ve spent £10 at Sainsbury’s, it can’t tell you’d save money on toilet paper down the road at Tesco.","spans":[{"start":0,"end":179,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Challenger banks’ green field tech, scrappy ‘startup’ mentality, and innovative positions in their customers’ eyes enable them not to have the same issues with (1) and (2).","spans":[{"start":0,"end":172,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"This is why the Monzo and Starling news signifies something important: if they start getting this unpacked transaction data it opens up a world where they can start taking advantage of this new (fundamentally different) business model.","spans":[{"start":0,"end":235,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Receipts and loyalty schemes aren’t the best way to get this data.","spans":[{"start":0,"end":66,"type":"strong"}]},{"type":"paragraph","text":"No one’s currently doing this at scale, and it will be difficult and time consuming to get right (just look at the small number of retailers Flux supports as an example of this) but the rewards could be enormous. It could enable something that no retail bank has really been able to do: its valuation can grow based on the perceived value of the data they hold, not on some hard coupling to the amount of customers or deposits they hold.","spans":[{"start":0,"end":437,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"For a long time, the holy grail of transaction data was the payment networks. They handle $Trillions a day across billions of transactions and have direct, deep integrations with the world’s banks. But there’s a problem, payment providers are built on systems designed to scale the usage of credit cards forty years ago. They’re built for a world of little bits of plastic with magastripes in your pocket and expensive proprietary terminals in every physical location; this is not the world of open data standards, HTTP APIs and great developer experience.","spans":[{"start":0,"end":556,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Some payment providers (like Stripe) are starting to capture this transaction data from merchants, but there’s an enormous wall of technical debt and legacy systems sitting between that data and the banks ability to ingest and use it.","spans":[{"start":0,"end":234,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Is this where Open Banking comes in? While this transaction metadata isn’t part of the current (or indeed, future) draft of the Open Banking specifications, the bank’s now proven ability to align around a common specification, and the similarity to the increasingly widely adopted account payment Open Banking specifications, suggests it could be.","spans":[{"start":0,"end":347,"type":"strong"},{"start":14,"end":26,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.openbanking.org.uk/","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"As a provider of bank payment services who handles transaction level data, Banked is very excited about this direction for Open banking. We see it as a game changer for all banks.","spans":[{"start":0,"end":179,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"For better or worse, banks have an opportunity to become advertising businesses and we’ve seen how successful those can be.","spans":[{"start":0,"end":123,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Creepiness and the change in customer.","spans":[{"start":0,"end":38,"type":"strong"}]},{"type":"paragraph","text":"One thing inherent to this advertising, data-driven business model, is how it would shift a bank’s focus. In the same way Google provides search or Gmail to consumers in order to sell advertising, a bank (in this context) would provide retail banking services to get data.","spans":[{"start":0,"end":272,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"It remains to be seen how consumers (and regulators) will react to this model in a post-Cambridge Analytica world, but these banks are going to keep banging the drum of the user-value you can derive from this new data; it’s a PR path that’s already well-trodden by the large tech companies with aggressive data focused business models.","spans":[{"start":0,"end":335,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"It’s yet to be seen how much users will acknowledge (or care about) the difference between ‘My bank knows I spent £45 at Footlocker’ vs ‘My bank knows I spent £22 on socks and £23 on a t-shirt,’ but the implications of this for users could be enormous. Imagine if your bank knew you’d bought a book from Amazon about a medical condition and your bank allowed organisations to target ads to you based on that purchase?","spans":[{"start":0,"end":417,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Like many organisations using personal data to better target ads, the implications are rarely prioritised over EBITDA.","spans":[{"start":0,"end":118,"type":"strong"}]}]},"items":[{}],"id":"text$24fc0983-0689-4650-9ff8-79784f438972","slice_type":"text","slice_label":null}]}}],"version":"587e76f","license":"All Rights Reserved"},"page":{"id":"YTijZBAAACIAaFG5","uid":null,"url":null,"type":"articles","href":"https://banked.cdn.prismic.io/api/v2/documents/search?ref=ZytR0hYAADAAMUe6&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YTijZBAAACIAaFG5%22%29+%5D%5D","tags":[],"first_publication_date":"2021-09-08T11:49:58+0000","last_publication_date":"2021-10-15T15:24:45+0000","slugs":["articles"],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"title":"Banked : Real time payments for consumers, businesses and banks.","description":"Real time payments for consumers, businesses and banks.","image":{"dimensions":{"width":2048,"height":1100},"alt":"Real time payments for consumers businesses and banks","copyright":null,"url":"https://images.prismic.io/banked/dc1e104e-b397-4f26-ba16-0b64aee7daea_page-og-2.png?auto=compress,format","id":"YVRhuRAAACEA8Vc6","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}}}},"tags":["A2A","APAC","Australia","SMS","Use Cases","Waave","account to account","acquisition","announcement","api","awards","bank of america","banked js","banked team","best practice","biometric auth","brand","charity","checkout","collaboration","comic relief","conference","consumer","consumer experience","developers","donations","ecommerce","education","encryption","engineering","fairpay","fintech","funding raise","golang","ideas","implementation","incentivisation","industry","insight","integrations","interview","investments","luminarybakery","merchant conversion","mission","money2020","nab","omnichannel","open banking","open telemetry","partnership","pay by bank","payment link","payments","podcast","press release","product update","qr codes","resource","rewards","security","series a","technology","terminology","user experience","variable recurring payments","visa","vision","vrp"],"site":{"id":"YTigQBAAACQAaENo","uid":null,"url":null,"type":"site","href":"https://banked.cdn.prismic.io/api/v2/documents/search?ref=ZytR0hYAADAAMUe6&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YTigQBAAACQAaENo%22%29+%5D%5D","tags":[],"first_publication_date":"2021-09-08T11:36:35+0000","last_publication_date":"2024-07-24T08:33:42+0000","slugs":["site"],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"links":[{"link":{"id":"YPhIIBAAACIA2Anu","type":"page","tags":[],"lang":"en-gb","slug":"banked--real-time-payments-for-consumers-businesses-and-banks.","first_publication_date":"2021-07-21T16:15:30+0000","last_publication_date":"2023-11-14T10:26:05+0000","uid":"product","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}},"text":"Product"},{"link":{"id":"ZXoF_xIAACwAvQwL","type":"page","tags":["Use Cases"],"lang":"en-gb","slug":"banked--real-time-payments-for-consumers-businesses-and-banks.","first_publication_date":"2023-12-14T10:07:51+0000","last_publication_date":"2023-12-15T14:28:11+0000","uid":"use-cases","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}},"text":"Use Cases"},{"link":{"id":"YUm-8REAACMAsEiw","type":"page","tags":[],"lang":"en-gb","slug":"banked--real-time-payments-for-consumers-businesses-and-banks.","first_publication_date":"2021-09-21T11:17:41+0000","last_publication_date":"2023-12-15T14:23:59+0000","uid":"partners","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}},"text":"Partners"},{"link":{"id":"YUn5XREAACIAsU1B","type":"page","tags":[],"lang":"en-gb","slug":"banked--real-time-payments-for-consumers-businesses-and-banks.","first_publication_date":"2021-09-21T15:25:21+0000","last_publication_date":"2023-11-14T10:07:22+0000","uid":"consumer","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}},"text":"Consumer"},{"link":{"id":"YTijZBAAACIAaFG5","type":"articles","tags":[],"lang":"en-gb","slug":"articles","first_publication_date":"2021-09-08T11:49:58+0000","last_publication_date":"2021-10-15T15:24:45+0000","link_type":"Document","isBroken":false},"text":"Articles"}],"actions":[{"action_link":{"link_type":"Web","url":"https://console.banked.com/"},"action_text":"Log In"}],"prepend":"News","text1":"NAB and Plenti switch on PayTo for personal loan customers","action_text":"Read","action_link":{"id":"ZqC4LRMAAC4ArD_c","type":"article","tags":["pay by bank","press release","partnership","nab","APAC"],"lang":"en-gb","slug":"nab-and-plenti-switch-on-payto-solution-powered-by-banked-for-personal-loan-customers","first_publication_date":"2024-07-24T08:21:07+0000","last_publication_date":"2024-07-24T08:44:32+0000","uid":"nab-and-plenti-switch-on-payto","link_type":"Document","isBroken":false},"columns":[{"heading":"Company","text":[{"type":"paragraph","text":"About","spans":[{"start":0,"end":5,"type":"hyperlink","data":{"id":"YUpHXBEAACMAsqaB","type":"page","tags":[],"lang":"en-gb","slug":"banked--real-time-payments-for-consumers-businesses-and-banks.","first_publication_date":"2021-09-21T20:58:33+0000","last_publication_date":"2024-11-05T14:12:33+0000","uid":"about","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}}}]},{"type":"paragraph","text":"FAQs","spans":[{"start":0,"end":4,"type":"hyperlink","data":{"id":"YUmoJBEAACMAr-Eo","type":"page","tags":[],"lang":"en-gb","slug":"banked--real-time-payments-for-consumers-businesses-and-banks.","first_publication_date":"2021-09-21T09:38:50+0000","last_publication_date":"2024-07-24T08:35:51+0000","uid":"faqs","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}}}]},{"type":"paragraph","text":"Press","spans":[{"start":0,"end":5,"type":"hyperlink","data":{"id":"YgTwixIAAC8AOW74","type":"page","tags":[],"lang":"en-gb","slug":"banked--press-materials","first_publication_date":"2022-02-10T11:01:34+0000","last_publication_date":"2022-02-14T14:33:27+0000","uid":"press","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}}}]},{"type":"paragraph","text":"Contact Sales","spans":[{"start":0,"end":13,"type":"hyperlink","data":{"id":"YUn_2hEAACEAsWva","type":"page","tags":[],"lang":"en-gb","slug":"banked--real-time-payments-for-consumers-businesses-and-banks.","first_publication_date":"2021-09-21T15:53:03+0000","last_publication_date":"2023-08-08T08:57:48+0000","uid":"contact","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}}}]},{"type":"paragraph","text":"Careers","spans":[{"start":0,"end":7,"type":"hyperlink","data":{"id":"Y0a7zxEAAC4A74Vg","type":"page","tags":[],"lang":"en-gb","slug":"careers-at-banked-","first_publication_date":"2022-10-12T13:10:03+0000","last_publication_date":"2024-11-06T11:24:02+0000","uid":"careers","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}}}]}]},{"heading":"Platform","text":[{"type":"paragraph","text":"Developers","spans":[{"start":0,"end":10,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.banked.com/"}}]},{"type":"paragraph","text":"Log In","spans":[{"start":0,"end":6,"type":"hyperlink","data":{"link_type":"Web","url":"https://console.banked.com/"}}]},{"type":"paragraph","text":"Status","spans":[{"start":0,"end":6,"type":"hyperlink","data":{"link_type":"Web","url":"https://status.banked.com/"}}]},{"type":"paragraph","text":"Support","spans":[{"start":0,"end":7,"type":"hyperlink","data":{"link_type":"Web","url":"https://support.paybybank.com"}}]}]},{"heading":"Community","text":[{"type":"paragraph","text":"Articles","spans":[{"start":0,"end":8,"type":"hyperlink","data":{"id":"YTijZBAAACIAaFG5","type":"articles","tags":[],"lang":"en-gb","slug":"articles","first_publication_date":"2021-09-08T11:49:58+0000","last_publication_date":"2021-10-15T15:24:45+0000","link_type":"Document","isBroken":false}}]},{"type":"paragraph","text":"LinkedIn","spans":[{"start":0,"end":8,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.linkedin.com/company/banked-limited/"}}]},{"type":"paragraph","text":"Twitter","spans":[{"start":0,"end":7,"type":"hyperlink","data":{"link_type":"Web","url":"https://twitter.com/wearebanked"}}]},{"type":"paragraph","text":"Medium","spans":[{"start":0,"end":6,"type":"hyperlink","data":{"link_type":"Web","url":"https://medium.com/@banked"}}]}]},{"heading":"Legal","text":[{"type":"paragraph","text":"Privacy Policy","spans":[{"start":0,"end":14,"type":"hyperlink","data":{"link_type":"Web","url":"https://banked.com/privacy"}}]},{"type":"paragraph","text":"Terms + Conditions","spans":[{"start":0,"end":18,"type":"hyperlink","data":{"id":"YPhUnhAAACAA2D62","type":"legal","tags":[],"lang":"en-gb","slug":"pay-by-bank-payment-initiation-services-agreement.","first_publication_date":"2021-07-21T17:08:48+0000","last_publication_date":"2023-11-09T12:01:37+0000","uid":"pay-by-bank","link_type":"Document","isBroken":false}}]}]}],"footnote":[{"type":"paragraph","text":"Banked Ltd is authorised and regulated by the UK Financial Conduct Authority\n151 Wardour St, Unit 5.01, London, W1F 8WE, UK\nCompany number 11047186   :   Firm Reference Number 816944   :   +44 (0) 20 8090 2747","spans":[{"start":0,"end":209,"type":"label","data":{"label":"tag"}}]}],"text":[{"type":"paragraph","text":"We and selected partners use cookies and similar technologies as specified in the cookie policy.","spans":[{"start":0,"end":96,"type":"label","data":{"label":"p6"}},{"start":82,"end":95,"type":"hyperlink","data":{"link_type":"Web","url":"https://banked.com/cookies"}}]}],"accept":"OK","reject":"Decline","article_tags_heading":"Browse stories and categories."}}},"__N_SSG":true}