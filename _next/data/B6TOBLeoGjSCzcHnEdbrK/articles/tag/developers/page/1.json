{"pageProps":{"search":{"page":1,"results_per_page":12,"results_size":4,"total_results_size":4,"total_pages":1,"next_page":null,"prev_page":null,"results":[{"id":"YZ5CvhUAACMAsI2-","uid":"banked-at-gophercon-2021","url":null,"type":"article","href":"https://banked.cdn.prismic.io/api/v2/documents/search?ref=ZytR0hYAADAAMUe6&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YZ5CvhUAACMAsI2-%22%29+%5D%5D","tags":["conference","technology","developers","engineering","golang","open telemetry"],"first_publication_date":"2021-11-24T13:48:49+0000","last_publication_date":"2021-11-24T14:29:31+0000","slugs":["banked-at-gophercon-2021.","banked-at-gophercon-2021"],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"title":"Banked at GopherCon 2021.","description":"Talking Open Telemetry to instrument Go applications at Gophercon 2021. Chris Reeves, one of our expert platform engineers, shares his keynote talk and insights.","image":{"dimensions":{"width":1392,"height":896},"alt":"payments network nebula","copyright":null,"url":"https://images.prismic.io/banked/5828a6e9-0a28-4e0c-890c-8bc5a3608f9d_dummy-img.png?auto=compress,format","id":"YUtsAhEAACEAt9El","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}},"author":{"id":"YUtkFxEAACMAt60O","type":"person","tags":[],"lang":"en-gb","slug":"banked-team","first_publication_date":"2021-09-22T17:13:00+0000","last_publication_date":"2021-09-29T16:47:17+0000","uid":"banked-team","data":{"full_name":"Banked Team","image":{"dimensions":{"width":160,"height":160},"alt":"banked team logo","copyright":null,"url":"https://images.prismic.io/banked/75834cc4-e751-49bb-a02e-30cf0e323c9b_author-banked.png?auto=compress,format","id":"YUtkDREAACEAt6zf","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}}},"link_type":"Document","isBroken":false},"post_date":"2021-11-24","header":[{"primary":{"image":{"dimensions":{"width":2432,"height":1328},"alt":"gopher conference banked talk","copyright":null,"url":"https://images.prismic.io/banked/32548948-9c2d-4258-a39a-ab198ede631c_team-culture-10.png?auto=compress,format","id":"YXnOvxEAACQAAxTx","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}},"caption":[]},"items":[{}],"id":"image$5c06f911-61c0-423d-bafc-04b26d082939","slice_type":"image","slice_label":null}],"body":[{"primary":{"text":[{"type":"heading3","text":"It’s back! After a couple of years of no in person conferences and the Golang London meet ups not yet restarting, it felt great to be able to attend a GopherCon UK, not least because I was also going to speaking at the event. GopherCon UK is one of the best conferences to attend as it's always a fun informative event.","spans":[{"start":0,"end":319,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Coordinating data changes in distributed systems.","spans":[{"start":0,"end":49,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Tiago Mendes gave an excellent thought provoking talk on how data changes within a distributed systems. This seems like an easy task in a monolith, you simply update the data in the database but in a distributed system, where data is spread across multiple services this becomes a challenge. How do we ensure data integrity? Where is the source of truth? How do we maintain","spans":[{"start":0,"end":373,"type":"strong"}]},{"type":"paragraph","text":"consistency? Tiago's talk covered various strategies in which we can help solve these problems, the main thrust being the Saga pattern.","spans":[{"start":0,"end":135,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"The general idea is to create data orchestrator services which manage the updating of data in a distributed system, potentially calling multiple services to update their state and rolling back if any errors occurred. This is certainly an interesting approach and one we here at Banked are keen to explore as we really scale out our services.","spans":[{"start":0,"end":341,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Acceptance tests, BDD and Go.","spans":[{"start":0,"end":29,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Testing is always a complex topic but always an extremely important one. Riya Dattani & Chris James from Salt Pay gave an excellent talk on how testing doesn't just impact the code you are writing but how you work with the wider business too.","spans":[{"start":0,"end":242,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Riya and Chris went into detail about how we can use BDD (Behaviour Driven Development) to help us writ better more useful software in an efficient way. Their code examples were excellent and it was interesting to see how you can achieve a good TDD/BDD workflow without the need for complex testing frameworks, Go already provides everything we need to write good, well defined BDD style tests.","spans":[{"start":0,"end":394,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Software development reimagined.","spans":[{"start":0,"end":32,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"This was one of my favourite talks of the conference by André Eriksson, a former Spotify engineer and now founder of https://encore.dev/. Here André talked about how over the last 50+ years of software engineering our core tools of our trade have not evolved with us, we still to this day open up a text editor as our core tool to write our code. But the software engineering we do today is very different to the engineering we were doing just 5 years ago but our tools have remained to same.","spans":[{"start":0,"end":492,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Today we spend most of our time stitching services together via APIs, events or both, rather than writing the core business logic. André has developed Encore, a way to make our lives and software engineers better by allowing Encore to do all the heavy lifting leaving engineers to be concerned with the core business logic the service needs to provide.","spans":[{"start":0,"end":352,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"This is certainly an interesting tool to keep an eye on and one to watch out for on YouTube.","spans":[{"start":0,"end":92,"type":"strong"}]}]},"items":[{}],"id":"text$95c35df2-b85c-4f3a-92eb-866e2100ecba","slice_type":"text","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"Watch Chris’s keynote here.","spans":[{"start":0,"end":27,"type":"strong"}]}],"embed_url":{"provider_name":"YouTube","provider_url":"https://www.youtube.com/","title":"GopherCon UK 2021: Chris Reeves - Instrumenting GO Applications","author_name":"GopherCon UK","author_url":"https://www.youtube.com/c/GopherConUK","type":"video","height":113,"width":200,"version":"1.0","thumbnail_height":360,"thumbnail_width":480,"thumbnail_url":"https://i.ytimg.com/vi/Xo7S5fQq2V8/hqdefault.jpg","html":"<iframe width=\"200\" height=\"113\" src=\"https://www.youtube.com/embed/Xo7S5fQq2V8?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","embed_url":"https://youtu.be/Xo7S5fQq2V8"}},"items":[{}],"id":"embed$dba34681-b9a6-42b6-8eb1-e3b24a9d4b5f","slice_type":"embed","slice_label":null},{"primary":{"text":[{"type":"heading3","text":"Instrumenting Go applications with Open Telemetry.","spans":[{"start":0,"end":50,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"I'd be remiss not to mention my own talk here, since this was certainly a personal highlight for me. I won't go into too much detail - watch out for a more technical deep dive blog post coming soon.","spans":[{"start":0,"end":198,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"To summarise, I spoke about how we can use a fairly new framework called Open Telemetry to add valuable observability to our services. Without good observability we run the risk of not being to reason or debug our systems as they grow. Tracing can allow us to track requests through our system end-to-end whilst metrics and allow us to gain valuable insights on system performance. And of course good well formed structured logs can help us debug issues at the root cause.","spans":[{"start":0,"end":472,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"I also went into how we can set up our architecture using the Open Telemetry collector to provide a single code implementation and allow the collector to push our observability data to any provider we want.","spans":[{"start":0,"end":206,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"All the slides and code examples are on our GitHub here.","spans":[{"start":0,"end":56,"type":"strong"},{"start":44,"end":56,"type":"hyperlink","data":{"link_type":"Web","url":"https://github.com/banked/GopherConUK2021"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Scaling Using Go.","spans":[{"start":0,"end":17,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"The last keynote of the talk by Adam Hicks spoke about Luno's growth over the past two years was made possible by using Go. Luno was able to empower their teams though their usage of Go allowing their ever growing team of engineers to were able to tackle challenges together.","spans":[{"start":0,"end":275,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Luno has developed a few Open Source tools to help them along the way, such as Reflix which is a helps building distributed event notification streams or Jettison which is tool to provide structure logs / error handling over gRPC.","spans":[{"start":0,"end":230,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"There was certainly a lot of inspiration to take here as Banked transitions to a more event driven system with APIs provided by gRPC / Protocol Buffers.","spans":[{"start":0,"end":152,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"This was an excellent conference and it felt great to get back there, a quick shout out to the events team and all the staff at The Brewery which provided an excellent venue, food and drinks.","spans":[{"start":0,"end":191,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"There was so much more I didn't get to see at GopherCon 2021, so keep an eye out on the GopherCon UK YouTube channel for more.","spans":[{"start":0,"end":126,"type":"strong"},{"start":88,"end":116,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.youtube.com/gopherconuk"}}]}]},"items":[{}],"id":"text$e515d394-2e4a-4c0a-9ac2-411c73d69203","slice_type":"text","slice_label":null}]}},{"id":"YU3-dRAAACEA1QHC","uid":"event-sourcing","url":null,"type":"article","href":"https://banked.cdn.prismic.io/api/v2/documents/search?ref=ZytR0hYAADAAMUe6&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YU3-dRAAACEA1QHC%22%29+%5D%5D","tags":["technology","engineering","education","insight","developers"],"first_publication_date":"2021-09-24T16:36:14+0000","last_publication_date":"2021-09-29T16:54:17+0000","slugs":["event-sourcing."],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"title":"Event Sourcing.","description":"At Banked, we offer real-time payments to our customers, which involves interfacing directly with all major UK banks. It’s important for us to know the health/service level of the APIs at each bank we interact with, so we needed a way to monitor all of that traffic.","image":{"dimensions":{"width":1392,"height":896},"alt":"payments network nebula","copyright":null,"url":"https://images.prismic.io/banked/5828a6e9-0a28-4e0c-890c-8bc5a3608f9d_dummy-img.png?auto=compress,format","id":"YUtsAhEAACEAt9El","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}},"author":{"id":"YUtfghEAACIAt5zy","type":"person","tags":[],"lang":"en-gb","slug":"tom-watt","first_publication_date":"2021-09-22T16:53:27+0000","last_publication_date":"2021-09-29T16:44:42+0000","uid":"tom-watt","data":{"full_name":"Tom Watt","role":"Payments Lead","image":{"dimensions":{"width":160,"height":160},"alt":"Tom Watt","copyright":null,"url":"https://images.prismic.io/banked/e770eb4a-b930-4a62-8b83-13c2edca8005_author-tom-watt.png?auto=compress,format","id":"YUtfaBEAACQAt5xy","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}}},"link_type":"Document","isBroken":false},"post_date":"2020-05-31","header":[],"body":[{"primary":{"text":[{"type":"heading3","text":"Event sourcing gets a mixed reaction from the development community. At Banked, we recently had a problem to solve and decided on event sourcing as an interesting solution. Our approach was one we haven’t seen elsewhere, so I thought it might be worth sharing.","spans":[{"start":0,"end":260,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Before we get to the specifics of our solution, a quick general intro to event sourcing is probably useful. If you’re familiar with all this already, you might want to skip ahead.","spans":[{"start":0,"end":179,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Event Sourcing (ES): Mini Primer.","spans":[{"start":0,"end":33,"type":"strong"}]},{"type":"paragraph","text":"The basic principle of ES is that we capture every change of state to our application as events, then store these events in the order they were produced. That log, or sequence of events, then forms our single source of truth for the state of our application.","spans":[{"start":0,"end":258,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"That’s it really.","spans":[{"start":0,"end":17,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Contrast this with the more common approach of a relational database, which will generally store the current state of the world, i.e. where we got to after all those events occurred. We actually throw away a lot of information with this approach — we know where we are, but not how we got there.","spans":[{"start":0,"end":295,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Event sourcing is not a widely used approach in software engineering (and that’s probably as it should be…) but as a general system it is more common than you might think. In fact, I can almost guarantee you use an event sourced system every single day: your bank’s ledger is an event sourced record of every change you’ve ever made to your balance. No bank would store just your current balance, and throw away the changes. Accountants had perfected event sourcing well before software engineering was around to coin the term; the first recorded ledgers were found in the city of Mesopotamia, today’s Iraq, around 7000 years ago, so its a fairly well trodden path. In the development world, the most common example of software built with ES is probably Git, and the benefits there are pretty obvious.","spans":[{"start":0,"end":801,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"That said, there’s a good reason that we all know how to use relational databases, but the same can’t be said for ES. It adds complexity, is much easier to get wrong and is arguably a more challenging paradigm for developers to operate within. For many use cases, particularly where the history of our state is irrelevant, that’s just a bad trade. For the right use case though, it’s an elegant solution.","spans":[{"start":0,"end":404,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"A lot more has been said on ES (plus associated patterns and techniques like CQRS) by people much smarter than me, so if you want to explore the fundamentals a bit more, here’s a couple of videos that could be useful if you’re interested:","spans":[{"start":0,"end":238,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Event Sourcing: you are doing it wrong — David Schmitz","spans":[{"start":0,"end":54,"type":"strong"},{"start":0,"end":54,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.youtube.com/watch?v=GzrZworHpIk&t=1237s","target":"_blank"}}]},{"type":"paragraph","text":"GOTO 2014: Event Sourcing — Greg Young","spans":[{"start":0,"end":38,"type":"strong"},{"start":0,"end":38,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.youtube.com/watch?v=8JKjvY4etTY","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Event Sourcing: Our Solution.","spans":[{"start":0,"end":29,"type":"strong"}]},{"type":"paragraph","text":"So what’s the general shape of a use case that fits? Here’s where it might make sense to get into the specifics of the problem we were trying to solve.","spans":[{"start":0,"end":151,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"At Banked, we offer real-time payments to our customers, which involves interfacing directly with all major UK banks (we’re working on the rest of Europe…). It’s important for us to know the health/service level of the APIs at each bank we interact with, so we needed a way to monitor all of that traffic. Some form of event sourcing looked like a good fit, because the question is, in essence, a temporal one, i.e. how have the responses from each API changed over time. This felt like the key to a suitable use case for ES — it has to match the reality of the world you are modelling. If that fits, everything else tends to fall into place.","spans":[{"start":0,"end":642,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"So we began to explore how we might put the theory into practice. There’s a lot of choice when it comes to the technology available. Tools like Kafka and EventStore are powerful and seem to be common choices, but the steep learning curve requires a non-trivial investment in developer time, and they also involve a reasonable commitment in ongoing maintenance. We wanted something managed, that’s quick to get going, and can be easily explained to other devs. It needs to be scalable too, because the number of events we’ll be chucking at it is significant.","spans":[{"start":0,"end":557,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Enter Google’s Firestore.","spans":[{"start":0,"end":25,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Firestore is a NoSQL document database, with a few handy features that make it a pretty great fit. The basic structure of Firestore is alternating documents and collections — with a document being a single blob of data. Each document is part of a collection alongside other documents, and each document can have sub-collections, which each contain further documents and so on, ad infinitum. Whilst a single document has a maximum size limit, the size of a collection is essentially unbounded. So this is starting to look like a good match — each of our events (a small blob of data) maps nicely to a document, and we can group these events into unbounded collections, which is ideal as the history of our application keeps growing.","spans":[{"start":0,"end":731,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"One obvious issue here is reading back the data. Given such a big collection of events, we definitely don’t want to end up searching through the whole collection to get the information we need. This is where some careful structuring of the data makes all the difference. We want to group documents together in such a way that the collection contains all the events we are interested in (but no more than that) for a given operation, and then make sure we have an index for every field we need to query. Firestore automatically sets up an index for each field in our document, so as long as we include a timestamp for each event, we get a pretty simple way to very quickly retrieve the latest N events for whichever collection we are interested in. Different problems will require their own unique structure.","spans":[{"start":0,"end":807,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Ideally, this sequence of events should also be immutable; we should never be going back and altering our history of events. This allows us to reliably recreate/replay our entire history, which is a handy feature for any software (debugging, regression testing, audit, etc.). We can do a pretty good job of ensuring this with IAM policies, although this could be improved if Google offered IAM permissions for Firestore at a more granular level, on a per-collection basis.","spans":[{"start":0,"end":472,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"So far so good.","spans":[{"start":0,"end":15,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Next we need to decide how we build our logic around Firestore. Cloud functions were an obvious choice here. Our events were already being published to PubSub, so it was simple to set up a cloud function that consumed these events and appended them to the appropriate collection in Firestore. Firestore then fires handy triggers whenever a new document is created. This allows us to hook up as many different cloud functions as we want, to listen for new events being appended, and gives us a nice way to keep each unit of work simple and self contained. Each function is responsible for calculating a given metric we are interested in, and can persist the new metric wherever we like. This also means the rest of our system needs to know nothing about event sourcing — each function can update a certain metric and push the updated information to PubSub (or wherever you like), to be consumed by any other part of the system that’s interested. So it’s totally decoupled, and doesn’t slow anyone else down if ES is not their thing. It’s also massively scalable with pretty much zero effort.","spans":[{"start":0,"end":1090,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Event Sourcing: Long Term.","spans":[{"start":0,"end":26,"type":"strong"}]},{"type":"paragraph","text":"All in all, it’s been a very successful approach so far, but there are a few pitfalls lurking down the line that require a bit of forethought to avoid. The biggest of these is versioning of events. If you are going to rely on an immutable sequence of events for your application state, you can’t just run a database migration whenever you want to change some fields around. There are a few approaches to this, but we will probably save the solution we came up with for a future blog post.","spans":[{"start":0,"end":488,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Eventual consistency is another common characteristic of an ES system. Again, there are a variety of solutions that ultimately depend on your use case — we were happy with eventual consistency for our particular problem, so we neatly sidestepped that one.","spans":[{"start":0,"end":255,"type":"strong"}]},{"type":"paragraph","text":"So, there you have it. At the risk of a summary full of useless platitudes: ES is not a one-size fits all pattern but, for the right situation, it can be a powerful tool. A combination of Firestore, PubSub, and Cloud Functions can be a simple and scalable implementation strategy.","spans":[{"start":0,"end":280,"type":"strong"}]},{"type":"paragraph","text":"‍","spans":[{"start":0,"end":1,"type":"strong"}]}]},"items":[{}],"id":"text$f55c80f6-425a-4b67-85d4-cd08fa64a432","slice_type":"text","slice_label":null}]}},{"id":"YVMy2xAAACEA7BAF","uid":"shipping-web-components-in-2020","url":null,"type":"article","href":"https://banked.cdn.prismic.io/api/v2/documents/search?ref=ZytR0hYAADAAMUe6&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YVMy2xAAACEA7BAF%22%29+%5D%5D","tags":["technology","developers","banked js","insight","education"],"first_publication_date":"2021-09-28T15:21:04+0000","last_publication_date":"2021-09-29T15:43:25+0000","slugs":["shipping-web-components-in-2020."],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"title":"Shipping web components in 2020.","description":"Recently, we shipped Banked.js, a component library for integrating account-to-account payments into any web application. We’d love to share what that process looked like.","image":{"dimensions":{"width":2432,"height":1648},"alt":"shipping web components","copyright":null,"url":"https://images.prismic.io/banked/1e574cfd-79bc-478c-ab7a-f034494d142d_shipping.png?auto=compress,format","id":"YVNh2xAAACEA7Oaa","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}},"author":{"id":"YUuR0BEAACMAuH1e","type":"person","tags":[],"lang":"en-gb","slug":"joe-pettersson","first_publication_date":"2021-09-22T20:28:06+0000","last_publication_date":"2021-09-29T16:47:53+0000","uid":"joe-pettersson","data":{"full_name":"Joe Pettersson","role":"Chief Technology Officer","image":{"dimensions":{"width":160,"height":160},"alt":"Joe Pettersson","copyright":null,"url":"https://images.prismic.io/banked/9a5546bb-dc84-403f-b062-1ed795cbb746_author-joe.png?auto=compress,format","id":"YUtfaBEAACEAt5xx","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}}},"link_type":"Document","isBroken":false},"post_date":"2020-04-21","header":[{"primary":{"image":{"dimensions":{"width":2432,"height":1648},"alt":"shipping web components","copyright":null,"url":"https://images.prismic.io/banked/1e574cfd-79bc-478c-ab7a-f034494d142d_shipping.png?auto=compress,format","id":"YVNh2xAAACEA7Oaa","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}},"caption":[]},"items":[{}],"id":"image$a47d9b4d-6e88-4bce-8989-d918b503a24d","slice_type":"image","slice_label":null}],"body":[{"primary":{"text":[{"type":"heading3","text":"Recently, we shipped Banked.js, a component library for integrating account-to-account payments into any web application. We’d love to share what that process looked like, from vanilla JavaScript to shipping a web-component: what we thought about, what we tried, and why. We also wanted to talk about what it’s like to build and ship a web component in 2020.","spans":[{"start":0,"end":358,"type":"strong"},{"start":21,"end":30,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.banked.com/docs/bankedjs","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"What is Banked.js and why did you create it?","spans":[{"start":0,"end":44,"type":"strong"}]},{"type":"paragraph","text":"The Banked platform enables anyone to take direct account-to-account payments. We provide several ways of doing this, ranging from the very easy to implement (using our hosted checkout) to the more involved (building your own custom checkout experience using our Checkout API).","spans":[{"start":0,"end":277,"type":"strong"},{"start":263,"end":275,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.banked.com/reference#the-checkout-api","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"When we spoke to our customers, we often heard the feedback that they wanted a middle ground. Specifically, they wanted a way of embedding our checkout inside their user experience (and therefore controlling it) but with no need to build it entirely themselves.","spans":[{"start":0,"end":261,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"The core of Banked’s checkout is a screen where users select which bank they’d like to pay with. From here, they are redirected to their chosen bank’s authorisation flow and back to a callback URL provided by the merchant.","spans":[{"start":0,"end":222,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"We wanted to provide a way of our customers easily integrating this UI and behaviour into their web applications. Embedding the UI widget with JavaScript was the obvious answer as many of our customers have experience with embedding payment widgets, but that comes with concerns for everybody.","spans":[{"start":0,"end":293,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"The blessing and curse of being on other people’s pages.","spans":[{"start":0,"end":56,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"EMBEDDED USER EXPERIENCE.","spans":[{"start":0,"end":25,"type":"label","data":{"label":"p3"}},{"start":0,"end":25,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Embedding a UI into one you don’t control forces you to answer a few of questions:","spans":[{"start":0,"end":82,"type":"strong"}]},{"type":"list-item","text":"What’s the minimum UX/UI you can provide to deliver value?","spans":[{"start":0,"end":58,"type":"strong"}]},{"type":"list-item","text":"How (or should) our embed react to the UX and layout around it?","spans":[{"start":0,"end":63,"type":"strong"}]},{"type":"list-item","text":"Should implementors be able to customise our embed? If so, how much? Would allowing them to customise it affect the ability to provide a service? Or lead to ‘worse’ outcomes for their users?","spans":[{"start":0,"end":190,"type":"strong"}]},{"type":"paragraph","text":"After some deliberation, this is how we answered:","spans":[{"start":0,"end":49,"type":"strong"}]},{"type":"list-item","text":"We’re just going to be embed the bank selection UI","spans":[{"start":0,"end":50,"type":"strong"}]},{"type":"list-item","text":"Yes, it should react (in a limited way) to the surrounding UI (being responsive to screen size/orientation), expanding to fill its parent container","spans":[{"start":0,"end":147,"type":"strong"}]},{"type":"list-item","text":"It should only allow customisation in a very controlled way","spans":[{"start":0,"end":59,"type":"strong"},{"start":40,"end":44,"type":"em"}]},{"type":"paragraph","text":"The customisation we offered was simple: you can use our reactive button or not. There’s a lot of hard learned lessons and optimisations we’ve made to this screen from our own hosted checkout (e.g. how does it react to a bank not being available?) and customisation might mean a bad experience for end-users and a poor conversion experience for merchants; if they really want that level of control they can always implement our Checkout API.","spans":[{"start":0,"end":441,"type":"strong"},{"start":428,"end":440,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.banked.com/reference#the-checkout-api","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"So, why did we ship a button at all? And why do we recommend our customers use it by default?","spans":[{"start":0,"end":93,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Two reasons:","spans":[{"start":0,"end":12,"type":"strong"}]},{"type":"list-item","text":"We’ve learned that giving users more context for what will happen next (e.g. going to their mobile banking app) helps conversion, branding the button after you select your bank helps too","spans":[{"start":0,"end":186,"type":"strong"}]},{"type":"list-item","text":"The next step is redirecting users to their selected bank’s authorisation URL. Unless this happens after a ‘user sourced event’, like a button click, many browsers will prevent the bank’s app deep-link from opening. We learned this lesson the hard way and we want to avoid our customers needing to learn it too!","spans":[{"start":0,"end":311,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Being good citizens on our customers’ pages.","spans":[{"start":0,"end":44,"type":"strong"}]},{"type":"paragraph","text":"Page weight and performance is increasingly important for our merchant customers, not least because of the impact it has on conversion rates; we need to vociferously defend every byte we ship to them and every tick of the browser’s rendering we use.","spans":[{"start":0,"end":249,"type":"strong"},{"start":103,"end":140,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.hubspot.com/marketing/page-load-time-conversion-rates","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"This led us to our Rules of the Game:","spans":[{"start":0,"end":37,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"o-list-item","text":"Bundle size should be as small as humanly possible.","spans":[{"start":0,"end":51,"type":"strong"}]},{"type":"o-list-item","text":"We should constantly track, measure, and optimise on-page performance.","spans":[{"start":0,"end":70,"type":"strong"}]},{"type":"o-list-item","text":"If we break, we break gracefully and have as few side effects on the page as possible.","spans":[{"start":0,"end":86,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"We measure bundle size (1) through WebPack’s performance API, erroring our build if we go over our pre-defined size limits, we also have bundle size optimisation as part of the ‘definition of done’ for tasks we work on with Banked.js. Measuring and optimisation (2) is achieved through vigorous testing and usage of the window.performance browser API.","spans":[{"start":0,"end":351,"type":"strong"},{"start":35,"end":60,"type":"hyperlink","data":{"link_type":"Web","url":"https://webpack.js.org/configuration/performance/","target":"_blank"}},{"start":320,"end":351,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.mozilla.org/en-US/docs/Web/API/Window/performance","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"However, anyone who has built an embeddable UI knows breaking gracefully (3) is hard. Only recently has the CSS community started embracing scoping, without which styling clashes and side-effects from the parent page, and the embed itself, can have serious consequences. Beyond CSS, JavaScript’s global mutable state and single threaded event loop can make small changes have unintended functional or performance implications.","spans":[{"start":0,"end":426,"type":"strong"},{"start":91,"end":147,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.mozilla.org/en-US/docs/Web/CSS/:scope","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"How could we solve these issues? Use tooling to automatically scope our CSS declarations? Use WebWorkers to avoid on page performance impacts? Lint and statically analyse our code as much as possible to avoid common foot-guns? These are all encapsulation problems, and we eventually realised web components and their associated web APIs mitigate many of these issues.","spans":[{"start":0,"end":367,"type":"strong"},{"start":37,"end":88,"type":"hyperlink","data":{"link_type":"Web","url":"https://medium.com/seek-blog/the-end-of-global-css-90d2a4a06284","target":"_blank"}},{"start":90,"end":104,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Embedding an iframe could have helped us solve these issues but it would have also introduced a lot of others: working around CSP and frame busting protections on our customers’ sites; ad and script blockers being increasingly aggressive with blocking iframes; and browser security protections limiting access to the top object from within the frame, preventing easy two-way integration with the embedding page.","spans":[{"start":0,"end":411,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Making implementors lives as easy as possible.","spans":[{"start":0,"end":46,"type":"strong"}]},{"type":"paragraph","text":"An explicit goal for Banked.js was making it as easy to integrate and use as possible. When we first started thinking about this project, we considered directly building components for JavaScript frameworks (like React or Vue) but when we investigated we realised, A) adoption of these frameworks wasn’t high enough amongst our customer base to justify it, and B) the cardinality of framework, versions, and tooling amongst those that had adopted it was high enough that it would take forever to get to significant coverage.","spans":[{"start":0,"end":524,"type":"strong"},{"start":435,"end":438,"type":"em"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"So we went down the path of being framework agnostic, exposing a simple enough API to integrate with any framework and version easily, ensuring a consistently straightforward implementation for our users.","spans":[{"start":0,"end":204,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Our design goal was for the API to be DOM based: you give us a tag on the page and a payment ID and we’ll take care of everything else. Our implementors shouldn’t have to care about order of precedence, loading, or asynchronicity unless they choose to. Web Components ended up adding huge value here, saving us a considerable amount of work building on page APIs (which we built ourselves in our first non Web Component version).","spans":[{"start":0,"end":429,"type":"strong"},{"start":284,"end":288,"type":"em"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Web Components also gave us a lot of ‘defensiveness’ for free. We want to provide a reliable service to our customers, and sometimes that involves us protecting them from themselves; Web Component’s encapsulation gives us a lot of that protection out of the box.","spans":[{"start":0,"end":262,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Version 1: Vanilla JavaScript and fighting the battle for encapsulation.","spans":[{"start":0,"end":72,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"The vision was simple: include a JavaScript snippet and give a DOM node a magic ID. Voila, you have your bank selection screen.","spans":[{"start":0,"end":127,"type":"strong"}]}]},"items":[{}],"id":"text$402ab86d-14b1-43b5-9700-2cf0ccdecd7b","slice_type":"text","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"Our initial API design for Banked.js","spans":[{"start":0,"end":36,"type":"em"}]}],"embed_url":{"gist":"Joe8Bit/312bd33d1db7cf484c69652b4e6e903f","embed_url":"https://gist.github.com/Joe8Bit/312bd33d1db7cf484c69652b4e6e903f","type":"rich","version":"1.0","title":"Initial banked.js version","author_name":null,"author_url":null,"provider_name":"GitHub","provider_url":"https://gist.github.com","cache_age":null,"thumbnail_url":"https://gist.github.com/fluidicon.png","thumbnail_width":null,"thumbnail_height":null,"html":"<script src=\"https://gist.github.com/Joe8Bit/312bd33d1db7cf484c69652b4e6e903f.js\"></script>"}},"items":[{}],"id":"embed$52ace15f-9ddc-490b-934b-93f62de344ce","slice_type":"embed","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"We thought this was simple, clean, easy to understand, and could be integrated easily into most tools and frameworks. You could then attach a DOM event listener to capture the custom event emitted by the component:","spans":[{"start":0,"end":214,"type":"strong"}]}]},"items":[{}],"id":"text$effb06a4-d135-44d0-aee2-8f99772c05d9","slice_type":"text","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"Getting the authorisation URL with JavaScript from out initial design","spans":[{"start":0,"end":69,"type":"em"}]}],"embed_url":{"gist":"Joe8Bit/bd73ae6e08cd4dd3a2dba5e8903bc62d","embed_url":"https://gist.github.com/Joe8Bit/bd73ae6e08cd4dd3a2dba5e8903bc62d","type":"rich","version":"1.0","title":"Source auth URL","author_name":null,"author_url":null,"provider_name":"GitHub","provider_url":"https://gist.github.com","cache_age":null,"thumbnail_url":"https://gist.github.com/fluidicon.png","thumbnail_width":null,"thumbnail_height":null,"html":"<script src=\"https://gist.github.com/Joe8Bit/bd73ae6e08cd4dd3a2dba5e8903bc62d.js\"></script>"}},"items":[{}],"id":"embed$55542f3b-5bbc-43ff-9552-ba0453822e4e","slice_type":"embed","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"We would handle all the mounting, API requests, and asynchronicity internally. Leaving very little work for the implementor.","spans":[{"start":0,"end":124,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"It worked, but it felt brittle.","spans":[{"start":0,"end":31,"type":"strong"},{"start":23,"end":30,"type":"em"}]},{"type":"paragraph","text":"","spans":[]},{"type":"list-item","text":"Magic ID’s felt easily broken (named access on the window object could have some unintended side effects, for example) and could be confusing to implement (did it have to be on a div element? Why not an article?)","spans":[{"start":0,"end":212,"type":"strong"},{"start":31,"end":64,"type":"hyperlink","data":{"link_type":"Web","url":"https://html.spec.whatwg.org/multipage/window-object.html#named-access-on-the-window-object","target":"_blank"}}]},{"type":"list-item","text":"We had to write a lot of code to handle the order of precedence and rendering (e.g. what happens if the data-payment-id isn’t set until after the page has rendered?)","spans":[{"start":0,"end":165,"type":"strong"},{"start":18,"end":21,"type":"em"},{"start":136,"end":141,"type":"em"}]},{"type":"list-item","text":"Even if we namespaced all our CSS, any change to global elements (like form fields, links, buttons) would have serious consequences for our layout. Writing overly specific CSS targeting, littering our code with !importantor inlining our CSS was hard to maintain and would lead to weird edge case performance and rendering issues.","spans":[{"start":0,"end":329,"type":"strong"}]},{"type":"list-item","text":"We had to write a disconcerting amount of JavaScript, and it all needed to run in the same event loop as the encapsulating page. It proved hard to do this defensively and in a way that we were confident wouldn’t impact page performance.\n","spans":[{"start":0,"end":236,"type":"strong"}]},{"type":"paragraph","text":"We also hadn’t planned to deal with user sourced events being needed to not break the bank’s redirect, but when we gave this version to the rest of the engineering team to play with, they quickly implemented this:","spans":[{"start":0,"end":213,"type":"strong"}]}]},"items":[{}],"id":"text$23ca79aa-423f-4421-8da0-11b2fbc0a360","slice_type":"text","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"Pure JavaScript redirects break in mobile safari, you need a user sourced event!","spans":[{"start":0,"end":80,"type":"em"}]}],"embed_url":{"gist":"Joe8Bit/f73de03535739dc7356fee307d521e5c","embed_url":"https://gist.github.com/Joe8Bit/f73de03535739dc7356fee307d521e5c","type":"rich","version":"1.0","title":"Bad implementation","author_name":null,"author_url":null,"provider_name":"GitHub","provider_url":"https://gist.github.com","cache_age":null,"thumbnail_url":"https://gist.github.com/fluidicon.png","thumbnail_width":null,"thumbnail_height":null,"html":"<script src=\"https://gist.github.com/Joe8Bit/f73de03535739dc7356fee307d521e5c.js\"></script>"}},"items":[{}],"id":"embed$5b6e49d1-0ca1-4026-9a81-3ca22eeaa6cf","slice_type":"embed","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"Which didn’t work in the hard to diagnose and understand way described above. We realised this would be common for our external implementors too.","spans":[{"start":0,"end":145,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Version 2: Web Components and, “Pfft, we don’t need none of that tooling”.","spans":[{"start":0,"end":74,"type":"strong"}]},{"type":"paragraph","text":"One of our engineers had a brainwave when thinking about the issues we’d run into, ‘Web Components!’.","spans":[{"start":0,"end":101,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Web Components are now a mature and well supported set of web APIs. They seemed to be perfectly designed for our use case and the challenges we were running into (particularly the Shadow DOM). We quickly built a new version, using the raw APIs, and it looked great:","spans":[{"start":0,"end":265,"type":"strong"},{"start":36,"end":50,"type":"hyperlink","data":{"link_type":"Web","url":"https://caniuse.com/#search=components","target":"_blank"}},{"start":176,"end":190,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM","target":"_blank"}}]}]},"items":[{}],"id":"text$034883d3-e4d7-4b65-8ee4-9cc497b3b4d1","slice_type":"text","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"The new Web Components based API for Banked.js","spans":[{"start":0,"end":46,"type":"em"}]}],"embed_url":{"gist":"Joe8Bit/f2f6c4e9c855e69db7001851bc439feb","embed_url":"https://gist.github.com/Joe8Bit/f2f6c4e9c855e69db7001851bc439feb","type":"rich","version":"1.0","title":"Web components!","author_name":null,"author_url":null,"provider_name":"GitHub","provider_url":"https://gist.github.com","cache_age":null,"thumbnail_url":"https://gist.github.com/fluidicon.png","thumbnail_width":null,"thumbnail_height":null,"html":"<script src=\"https://gist.github.com/Joe8Bit/f2f6c4e9c855e69db7001851bc439feb.js\"></script>"}},"items":[{}],"id":"embed$5b64f533-4307-41e2-a88c-104d63f7008f","slice_type":"embed","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"(Notice we also added a second component, the button).","spans":[{"start":0,"end":54,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"It provided most of the encapsulation we were after, handled the mounting and initialising of our component, and we had to write zero lines of code to do it. It also provided a much clearer, more semantic API for implementors to understand: no more magic strings and ambiguous DOM nodes. It even provided nice ways of handling event emission and nicely integrated as a part of a form element out of the box.","spans":[{"start":0,"end":407,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Results from our engineering team were positive, there were far fewer gotchas and heffalump traps when they created toy implementations. Most of them got it working in minutes!","spans":[{"start":0,"end":176,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"A new challenge emerged. We’d built a successful thing, but the tooling necessary to make us happy with its integrity, quality, and safety eluded us. Tooling for JavaScript projects is not something you usually lack, so we were interested to find so few options for testing, linting, and building Web Components.","spans":[{"start":0,"end":312,"type":"strong"},{"start":49,"end":55,"type":"em"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Before we had started on V2, we looked at Polymer and were pretty confused about its current status (parts of it are deprecated but are still used? Other projects under its banner appear to do similar things to the original Polymer library but not all of them?). It didn’t inspire confidence, and we discarded it in favour of quickly getting something up and running.","spans":[{"start":0,"end":367,"type":"strong"},{"start":42,"end":49,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.polymer-project.org/","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"This bears true for most of the Web Components ecosystem: it’s confusing, buggy, and riddled with out-of-date docs and confusingly deprecated tools.","spans":[{"start":0,"end":148,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"A particularly annoying issue was the lack of support (or bugginess) of Web Components implementations in popular testing tools; the web component community's default fall back is saying, ‘You need to use a full browser run-time,’ (like Karma). Full support for non-browser headless/JS runtimes would have made this process, and our CI infrastructure, much simpler.","spans":[{"start":0,"end":365,"type":"strong"},{"start":237,"end":242,"type":"hyperlink","data":{"link_type":"Web","url":"https://karma-runner.github.io/latest/index.html","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Version 3: Web Components and, “Turns out we do need that tooling”.","spans":[{"start":0,"end":67,"type":"strong"}]},{"type":"paragraph","text":"During our search through the dark and murky corners of the Web Components community we came across Open-WC: a laudable and successful effort to combine various tools and frameworks into a usable, opinionated, and reliable toolchain for building web components.","spans":[{"start":0,"end":261,"type":"strong"},{"start":100,"end":107,"type":"hyperlink","data":{"link_type":"Web","url":"https://open-wc.org/","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"It provides:","spans":[{"start":0,"end":12,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"list-item","text":"Working (and sensible) linters (ESLint and Stylist) configured for working with Web Components","spans":[{"start":0,"end":94,"type":"strong"}]},{"type":"list-item","text":"A framework and tooling for development, which was otherwise difficult and fragile to maintain","spans":[{"start":0,"end":94,"type":"strong"}]},{"type":"list-item","text":"A suite of tools for testing (unit, integration and accessibility)","spans":[{"start":0,"end":66,"type":"strong"}]},{"type":"list-item","text":"Build tooling (for our choice of tool WebPack, but also Rollup)","spans":[{"start":0,"end":63,"type":"strong"}]},{"type":"list-item","text":"Deployment and demo tooling (through a pretty sweet Storybook integration)\n","spans":[{"start":0,"end":74,"type":"strong"},{"start":52,"end":61,"type":"hyperlink","data":{"link_type":"Web","url":"https://storybook.js.org/","target":"_blank"}}]},{"type":"paragraph","text":"We quickly moved Banked.js to use Open WC and haven’t looked back. It’s meant we could delete a huge amount of home-brewed tooling and the tradeoffs have been worth it.","spans":[{"start":0,"end":168,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"It imposes a small bundle size penalty (mainly through its use of LitElement) but it was a small price worth paying for the development ergonomics and maintenance benefits. We’ve also changed its default build, and don’t use the <script> based ES modules it comes configured with.","spans":[{"start":0,"end":280,"type":"strong"},{"start":13,"end":18,"type":"em"},{"start":66,"end":76,"type":"hyperlink","data":{"link_type":"Web","url":"https://lit-element.polymer-project.org/","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"So now we’re left with a useful, safe, and reliable component any of our customers can use to embed account-to-account payments into their web app:","spans":[{"start":0,"end":147,"type":"strong"}]}]},"items":[{}],"id":"text$1499bca4-581d-4ff3-a50f-c3f274794c69","slice_type":"text","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"Our final API for Banked.js","spans":[{"start":0,"end":27,"type":"em"}]}],"embed_url":{"gist":"Joe8Bit/f2f6c4e9c855e69db7001851bc439feb","embed_url":"https://gist.github.com/Joe8Bit/f2f6c4e9c855e69db7001851bc439feb","type":"rich","version":"1.0","title":"Web components!","author_name":null,"author_url":null,"provider_name":"GitHub","provider_url":"https://gist.github.com","cache_age":null,"thumbnail_url":"https://gist.github.com/fluidicon.png","thumbnail_width":null,"thumbnail_height":null,"html":"<script src=\"https://gist.github.com/Joe8Bit/f2f6c4e9c855e69db7001851bc439feb.js\"></script>"}},"items":[{}],"id":"embed$0b793090-5aa1-4ae9-aa63-2e59452d89f9","slice_type":"embed","slice_label":null},{"primary":{"text":[{"type":"heading3","text":"Serving Banked.js","spans":[{"start":0,"end":17,"type":"strong"}]},{"type":"paragraph","text":"After we build Banked.js via Github Actions, we deploy it to Cloudflare’s KV Store and serve it to end users via a Worker. CloudFlare workers are serverless functions that are distributed and run in Cloudflare’s 200+ POPs.","spans":[{"start":0,"end":222,"type":"strong"},{"start":74,"end":82,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.cloudflare.com/products/workers-kv/","target":"_blank"}},{"start":113,"end":121,"type":"hyperlink","data":{"link_type":"Web","url":"https://workers.cloudflare.com/","target":"_blank"}},{"start":212,"end":221,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.cloudflare.com/network/","target":"_blank"}}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"We use workers (rather than Cloudflare’s pull based CDN) because it enables us to do a few different things that just aren’t possible (or if possible, not easy) with traditional CDNs, namely:","spans":[{"start":0,"end":191,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"list-item","text":"We can serve a debug build if the request comes from a specified domain or with a certain cookie set.","spans":[{"start":0,"end":101,"type":"strong"}]},{"type":"list-item","text":"We can serve different versions to different user agents if we want to dynamically include polyfills.","spans":[{"start":0,"end":101,"type":"strong"}]},{"type":"list-item","text":"We can multivariate test new versions of the script without implementors needing to update their config.\n","spans":[{"start":0,"end":104,"type":"strong"}]},{"type":"paragraph","text":"The example below is a worker function that serves a debug build if a cookie is present on the request (getting the JS from the KV store is omitted for brevity):","spans":[{"start":0,"end":161,"type":"strong"}]}]},"items":[{}],"id":"text$91438e50-b7b1-4c90-8641-a0f2eaf5468a","slice_type":"text","slice_label":null},{"primary":{"text":[{"type":"paragraph","text":"Cloudflare worker to serve a debug build of Banked.js","spans":[{"start":0,"end":53,"type":"em"}]}],"embed_url":{"gist":"Joe8Bit/4bc1c66a07b0c44f1cca24bbabcf8ad7","embed_url":"https://gist.github.com/Joe8Bit/4bc1c66a07b0c44f1cca24bbabcf8ad7","type":"rich","version":"1.0","title":"Cloudflare worker","author_name":null,"author_url":null,"provider_name":"GitHub","provider_url":"https://gist.github.com","cache_age":null,"thumbnail_url":"https://gist.github.com/fluidicon.png","thumbnail_width":null,"thumbnail_height":null,"html":"<script src=\"https://gist.github.com/Joe8Bit/4bc1c66a07b0c44f1cca24bbabcf8ad7.js\"></script>"}},"items":[{}],"id":"embed$73a8e4ea-738a-4666-bbfd-da7aa5fca88d","slice_type":"embed","slice_label":null},{"primary":{"text":[{"type":"heading3","text":"The future of embedded checkout at Banked.","spans":[{"start":0,"end":42,"type":"strong"}]},{"type":"paragraph","text":"We’ve ended up very happy with Banked.js: it provides our customers with a valuable, lightweight way of taking account-to-account payments and is easy and safe for us to iterate on and improve. Our aim is to open source Banked.js in the next few weeks.","spans":[{"start":0,"end":252,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"We’re also looking at how we can bring the same easy, safe integration experience to our customers’ native applications. Watch this space!","spans":[{"start":0,"end":138,"type":"strong"}]}]},"items":[{}],"id":"text$b1c425da-36ce-4c7a-9b6a-c1e4f8374fc2","slice_type":"text","slice_label":null}]}},{"id":"YUtgPhEAACMAt6B0","uid":"developing-with-a-beginners-mind","url":null,"type":"article","href":"https://banked.cdn.prismic.io/api/v2/documents/search?ref=ZytR0hYAADAAMUe6&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YUtgPhEAACMAt6B0%22%29+%5D%5D","tags":["banked team","vision","mission","engineering","developers"],"first_publication_date":"2021-09-22T16:56:35+0000","last_publication_date":"2021-09-30T18:01:41+0000","slugs":["developing-with-a-beginners-mind."],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"title":"Developing with a beginner's mind.","description":"‘If you can’t fly then run, if you can’t run then walk, if you can’t walk then crawl, but whatever you do you have to keep moving forward.’ — Martin Luther King, Jr.","image":{"dimensions":{"width":2432,"height":1312},"alt":"arrows reaching goals","copyright":null,"url":"https://images.prismic.io/banked/455c3621-47b9-42b1-b714-9d560ef4bd8d_arrows.png?auto=compress,format","id":"YUuaAhEAACEAuKJC","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}},"author":{"id":"YUtfghEAACIAt5zy","type":"person","tags":[],"lang":"en-gb","slug":"tom-watt","first_publication_date":"2021-09-22T16:53:27+0000","last_publication_date":"2021-09-29T16:44:42+0000","uid":"tom-watt","data":{"full_name":"Tom Watt","role":"Payments Lead","image":{"dimensions":{"width":160,"height":160},"alt":"Tom Watt","copyright":null,"url":"https://images.prismic.io/banked/e770eb4a-b930-4a62-8b83-13c2edca8005_author-tom-watt.png?auto=compress,format","id":"YUtfaBEAACQAt5xy","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}}},"link_type":"Document","isBroken":false},"post_date":"2019-04-30","header":[{"primary":{"image":{"dimensions":{"width":2432,"height":1312},"alt":"arrows reaching goals","copyright":null,"url":"https://images.prismic.io/banked/455c3621-47b9-42b1-b714-9d560ef4bd8d_arrows.png?auto=compress,format","id":"YUuaAhEAACEAuKJC","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}},"caption":[]},"items":[{}],"id":"image$4023aaff-0508-48fc-8cbe-bdbb9fc0bfb9","slice_type":"image","slice_label":null}],"body":[{"primary":{"text":[{"type":"heading3","text":"I’ve been working at Banked as a software engineer for a few months now, and one of the most astonishing things I’ve learnt in that time is that the human capacity to adapt and grow to meet the needs of their situation is well beyond what I thought possible.","spans":[{"start":0,"end":258,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"To give some context, I’ve set myself some fairly interesting professional challenges in the past — investment banking, self-taught developer, launching a start-up — and those situations definitely demanded some learning and growth on my part. But if I were to plot that speed of adaptation on a graph, I might previously have assumed it was fairly constant. A few months at Banked has shown me that I would have been wrong.","spans":[{"start":0,"end":424,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Every week has involved a deep dive into a new technology, framework or paradigm: understanding and implementing it, evaluating the result, then throwing away and starting again where necessary. I see this sudden spike in learning and productivity in myself and in the team around me, and it’s fantastic, but it leads me to ask what it is about the setup here at Banked that has created such a desirable outcome. Why haven’t I been consuming new technology at this pace in the past?","spans":[{"start":0,"end":482,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"The most obvious point is the one I led with: that we adapt to meet the need around us. This is true to an extent, since being in a relatively early stage as a company means there is a lot to be done. But I’ve been at this stage of a start-up before, with fewer people and hence more to do. Yet I wasn’t learning at the pace I am now.","spans":[{"start":0,"end":334,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"Which leads me to what I think is the more genuine answer, and why Banked is different to where I’ve been before. We’ve managed to get the team just right. Having hungry engineers who are keen to level-up and become experts in every shiny new technology available is great, but that energy needs to be channeled in the right direction. This comes from having the right kind of tech leads and seniors, who recognise the balance between allowing the team to explore and make mistakes, and avoiding getting totally lost in a technical rabbit hole.","spans":[{"start":0,"end":544,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"There is an idea in Zen Buddhism called Shoshin, which roughly translates as “beginner’s mind”. In essence, it’s about approaching any subject of study with openness and a total lack of preconception, just as a beginner or a child would. Often the biggest barrier to learning is all the assumptions we already hold about how things should be done. This can be especially true when you’re an expert in a particular technology: if you’re holding a hammer, everything looks like a nail.","spans":[{"start":0,"end":483,"type":"strong"}]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"For me, one unexpected benefit of the culture we’ve created at Banked — where constant learning is assumed and is just a normal part of everyone’s day — is that it helps to foster this mindset. When I joined a fintech start-up a few months ago, I didn’t know I would be getting a lesson in Zen Buddhism.","spans":[{"start":0,"end":303,"type":"strong"}]}]},"items":[{}],"id":"text$85513d65-f155-4554-979a-43672a6dd765","slice_type":"text","slice_label":null}]}}],"version":"587e76f","license":"All Rights Reserved"},"page":{"id":"YTijZBAAACIAaFG5","uid":null,"url":null,"type":"articles","href":"https://banked.cdn.prismic.io/api/v2/documents/search?ref=ZytR0hYAADAAMUe6&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YTijZBAAACIAaFG5%22%29+%5D%5D","tags":[],"first_publication_date":"2021-09-08T11:49:58+0000","last_publication_date":"2021-10-15T15:24:45+0000","slugs":["articles"],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"title":"Banked : Real time payments for consumers, businesses and banks.","description":"Real time payments for consumers, businesses and banks.","image":{"dimensions":{"width":2048,"height":1100},"alt":"Real time payments for consumers businesses and banks","copyright":null,"url":"https://images.prismic.io/banked/dc1e104e-b397-4f26-ba16-0b64aee7daea_page-og-2.png?auto=compress,format","id":"YVRhuRAAACEA8Vc6","edit":{"x":0,"y":0,"zoom":1,"background":"transparent"}}}},"tags":["A2A","APAC","Australia","SMS","Use Cases","Waave","account to account","acquisition","announcement","api","awards","bank of america","banked js","banked team","best practice","biometric auth","brand","charity","checkout","collaboration","comic relief","conference","consumer","consumer experience","developers","donations","ecommerce","education","encryption","engineering","fairpay","fintech","funding raise","golang","ideas","implementation","incentivisation","industry","insight","integrations","interview","investments","luminarybakery","merchant conversion","mission","money2020","nab","omnichannel","open banking","open telemetry","partnership","pay by bank","payment link","payments","podcast","press release","product update","qr codes","resource","rewards","security","series a","technology","terminology","user experience","variable recurring payments","visa","vision","vrp"],"site":{"id":"YTigQBAAACQAaENo","uid":null,"url":null,"type":"site","href":"https://banked.cdn.prismic.io/api/v2/documents/search?ref=ZytR0hYAADAAMUe6&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YTigQBAAACQAaENo%22%29+%5D%5D","tags":[],"first_publication_date":"2021-09-08T11:36:35+0000","last_publication_date":"2024-07-24T08:33:42+0000","slugs":["site"],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"links":[{"link":{"id":"YPhIIBAAACIA2Anu","type":"page","tags":[],"lang":"en-gb","slug":"banked--real-time-payments-for-consumers-businesses-and-banks.","first_publication_date":"2021-07-21T16:15:30+0000","last_publication_date":"2023-11-14T10:26:05+0000","uid":"product","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}},"text":"Product"},{"link":{"id":"ZXoF_xIAACwAvQwL","type":"page","tags":["Use Cases"],"lang":"en-gb","slug":"banked--real-time-payments-for-consumers-businesses-and-banks.","first_publication_date":"2023-12-14T10:07:51+0000","last_publication_date":"2023-12-15T14:28:11+0000","uid":"use-cases","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}},"text":"Use Cases"},{"link":{"id":"YUm-8REAACMAsEiw","type":"page","tags":[],"lang":"en-gb","slug":"banked--real-time-payments-for-consumers-businesses-and-banks.","first_publication_date":"2021-09-21T11:17:41+0000","last_publication_date":"2023-12-15T14:23:59+0000","uid":"partners","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}},"text":"Partners"},{"link":{"id":"YUn5XREAACIAsU1B","type":"page","tags":[],"lang":"en-gb","slug":"banked--real-time-payments-for-consumers-businesses-and-banks.","first_publication_date":"2021-09-21T15:25:21+0000","last_publication_date":"2023-11-14T10:07:22+0000","uid":"consumer","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}},"text":"Consumer"},{"link":{"id":"YTijZBAAACIAaFG5","type":"articles","tags":[],"lang":"en-gb","slug":"articles","first_publication_date":"2021-09-08T11:49:58+0000","last_publication_date":"2021-10-15T15:24:45+0000","link_type":"Document","isBroken":false},"text":"Articles"}],"actions":[{"action_link":{"link_type":"Web","url":"https://console.banked.com/"},"action_text":"Log In"}],"prepend":"News","text1":"NAB and Plenti switch on PayTo for personal loan customers","action_text":"Read","action_link":{"id":"ZqC4LRMAAC4ArD_c","type":"article","tags":["pay by bank","press release","partnership","nab","APAC"],"lang":"en-gb","slug":"nab-and-plenti-switch-on-payto-solution-powered-by-banked-for-personal-loan-customers","first_publication_date":"2024-07-24T08:21:07+0000","last_publication_date":"2024-07-24T08:44:32+0000","uid":"nab-and-plenti-switch-on-payto","link_type":"Document","isBroken":false},"columns":[{"heading":"Company","text":[{"type":"paragraph","text":"About","spans":[{"start":0,"end":5,"type":"hyperlink","data":{"id":"YUpHXBEAACMAsqaB","type":"page","tags":[],"lang":"en-gb","slug":"banked--real-time-payments-for-consumers-businesses-and-banks.","first_publication_date":"2021-09-21T20:58:33+0000","last_publication_date":"2024-11-05T14:12:33+0000","uid":"about","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}}}]},{"type":"paragraph","text":"FAQs","spans":[{"start":0,"end":4,"type":"hyperlink","data":{"id":"YUmoJBEAACMAr-Eo","type":"page","tags":[],"lang":"en-gb","slug":"banked--real-time-payments-for-consumers-businesses-and-banks.","first_publication_date":"2021-09-21T09:38:50+0000","last_publication_date":"2024-07-24T08:35:51+0000","uid":"faqs","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}}}]},{"type":"paragraph","text":"Press","spans":[{"start":0,"end":5,"type":"hyperlink","data":{"id":"YgTwixIAAC8AOW74","type":"page","tags":[],"lang":"en-gb","slug":"banked--press-materials","first_publication_date":"2022-02-10T11:01:34+0000","last_publication_date":"2022-02-14T14:33:27+0000","uid":"press","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}}}]},{"type":"paragraph","text":"Contact Sales","spans":[{"start":0,"end":13,"type":"hyperlink","data":{"id":"YUn_2hEAACEAsWva","type":"page","tags":[],"lang":"en-gb","slug":"banked--real-time-payments-for-consumers-businesses-and-banks.","first_publication_date":"2021-09-21T15:53:03+0000","last_publication_date":"2023-08-08T08:57:48+0000","uid":"contact","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}}}]},{"type":"paragraph","text":"Careers","spans":[{"start":0,"end":7,"type":"hyperlink","data":{"id":"Y0a7zxEAAC4A74Vg","type":"page","tags":[],"lang":"en-gb","slug":"careers-at-banked-","first_publication_date":"2022-10-12T13:10:03+0000","last_publication_date":"2024-11-06T11:24:02+0000","uid":"careers","link_type":"Document","isBroken":false,"extras":{"ancestors":[]}}}]}]},{"heading":"Platform","text":[{"type":"paragraph","text":"Developers","spans":[{"start":0,"end":10,"type":"hyperlink","data":{"link_type":"Web","url":"https://developer.banked.com/"}}]},{"type":"paragraph","text":"Log In","spans":[{"start":0,"end":6,"type":"hyperlink","data":{"link_type":"Web","url":"https://console.banked.com/"}}]},{"type":"paragraph","text":"Status","spans":[{"start":0,"end":6,"type":"hyperlink","data":{"link_type":"Web","url":"https://status.banked.com/"}}]},{"type":"paragraph","text":"Support","spans":[{"start":0,"end":7,"type":"hyperlink","data":{"link_type":"Web","url":"https://support.paybybank.com"}}]}]},{"heading":"Community","text":[{"type":"paragraph","text":"Articles","spans":[{"start":0,"end":8,"type":"hyperlink","data":{"id":"YTijZBAAACIAaFG5","type":"articles","tags":[],"lang":"en-gb","slug":"articles","first_publication_date":"2021-09-08T11:49:58+0000","last_publication_date":"2021-10-15T15:24:45+0000","link_type":"Document","isBroken":false}}]},{"type":"paragraph","text":"LinkedIn","spans":[{"start":0,"end":8,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.linkedin.com/company/banked-limited/"}}]},{"type":"paragraph","text":"Twitter","spans":[{"start":0,"end":7,"type":"hyperlink","data":{"link_type":"Web","url":"https://twitter.com/wearebanked"}}]},{"type":"paragraph","text":"Medium","spans":[{"start":0,"end":6,"type":"hyperlink","data":{"link_type":"Web","url":"https://medium.com/@banked"}}]}]},{"heading":"Legal","text":[{"type":"paragraph","text":"Privacy Policy","spans":[{"start":0,"end":14,"type":"hyperlink","data":{"link_type":"Web","url":"https://banked.com/privacy"}}]},{"type":"paragraph","text":"Terms + Conditions","spans":[{"start":0,"end":18,"type":"hyperlink","data":{"id":"YPhUnhAAACAA2D62","type":"legal","tags":[],"lang":"en-gb","slug":"pay-by-bank-payment-initiation-services-agreement.","first_publication_date":"2021-07-21T17:08:48+0000","last_publication_date":"2023-11-09T12:01:37+0000","uid":"pay-by-bank","link_type":"Document","isBroken":false}}]}]}],"footnote":[{"type":"paragraph","text":"Banked Ltd is authorised and regulated by the UK Financial Conduct Authority\n151 Wardour St, Unit 5.01, London, W1F 8WE, UK\nCompany number 11047186   :   Firm Reference Number 816944   :   +44 (0) 20 8090 2747","spans":[{"start":0,"end":209,"type":"label","data":{"label":"tag"}}]}],"text":[{"type":"paragraph","text":"We and selected partners use cookies and similar technologies as specified in the cookie policy.","spans":[{"start":0,"end":96,"type":"label","data":{"label":"p6"}},{"start":82,"end":95,"type":"hyperlink","data":{"link_type":"Web","url":"https://banked.com/cookies"}}]}],"accept":"OK","reject":"Decline","article_tags_heading":"Browse stories and categories."}}},"__N_SSG":true}